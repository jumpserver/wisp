syntax = "proto3";
package message;

option go_package = "/protobuf";

message User {
  string id = 1;
  string name = 2;
  string username = 3;
  string role = 4;
  bool is_valid = 5;
  bool is_active = 6;
}

message Account {
  string id =1;
  string name = 2;
  string username = 4;
  string secret = 5;
  LabelValue secretType = 6;
}

message LabelValue {
  string label = 1;
  string value = 2;
}

message Asset {
  message Specific {
    string db_name = 1;
    bool use_ssl = 2;
    string ca_cert = 3;
    string client_cert = 4;
    string client_key = 5;
    bool allow_invalid_cert = 6;

    string auto_fill = 7;
    string username_selector = 8;
    string password_selector = 9;
    string submit_selector = 10;
    string script = 11;
    string http_proxy = 12;
  }

  string id = 1;
  string name = 2;
  string address = 3;
  string org_id = 4;
  string org_name = 5;
  repeated Protocol protocols = 6;
  Specific specific = 7;
}

message Protocol {
  string name = 2;
  int32 id = 1;
  int32 port = 3;
}

message Gateway {
  string id = 1;
  string name = 2;
  string ip = 3;
  int32 port = 4;
  string protocol = 5;
  string username = 6;
  string password = 7;
  string private_key = 8;
}

message Permission {
  bool enable_connect = 1;
  bool enable_download = 2;
  bool enable_upload = 3;
  bool enable_copy = 4;
  bool enable_paste = 5;
}

message CommandACL {
  enum Action {
    Reject = 0;
    Accept = 1;
    Review = 2;
    Warning = 3;
    Unknown = 4;
  }
  string id = 1;
  string name = 2;
  int32 priority = 3;
  Action action = 5;
  bool is_active = 6;
  repeated CommandGroup command_groups = 7;
}

message CommandGroup {
  string id = 1;
  string name = 2;
  string content = 3;
  string Type = 4;
  string pattern = 5;
  bool ignore_case = 6;
}

message ExpireInfo {
  int64 expire_at = 1;
}

message Session {
  enum LoginFrom {
    WT = 0;
    ST = 1;
    RT = 2;
    DT = 3;
  }
  string id = 1;
  string user = 2;
  string asset = 3;
  string account = 4;
  LoginFrom login_from = 5;
  string remote_addr = 6;
  string protocol = 7;
  int64 date_start = 8;
  string org_id = 9;
  string user_id = 10;
  string asset_id = 11;
  string account_id = 12;
}

enum TaskAction {
  KillSession = 0;
  LockSession = 1;
  UnlockSession = 2;
}

message TerminalTask {
  string id = 1;
  TaskAction action = 2;
  string session_id = 3;
  string terminated_by = 4;
  string created_by = 5;
}

enum RiskLevel {
  Normal = 0;
  Warning = 1;
  Reject = 2;
  ReviewReject = 3;
  ReviewAccept = 4;
  ReviewCancel = 5;
}

message TokenAuthInfo {
  string key_id = 1;
  string secrete_id = 2;
  Asset asset = 3;
  User user = 4;
  Account account = 5;
  Permission permission = 6;
  ExpireInfo expire_info = 7;
  repeated CommandACL filter_rules = 8;
  repeated Gateway gateways = 9;
  ComponentSetting setting = 10;
  Platform platform = 11;
}

message Platform {
  int32 id = 1;
  string name =2;
  string category = 3;
  string charset = 4;
  string type = 5;
  repeated PlatformProtocol protocols = 6;
}

message PlatformProtocol {
  int32 id = 1;
  string name = 2;
  int32 port = 3;
  map<string,string> settings = 4;
}

message ComponentSetting {
  int32 max_idle_time = 1;
  int32 max_session_time = 2;
}

message Forward {
  string id = 1;
  string Host = 2;
  int32 port = 3;
}

message PublicSetting {
  bool xpack_enabled = 1;
  bool valid_license = 2;
  string gpt_base_url = 3;
  string gpt_api_key = 4;
  string gpt_proxy = 5;
  string gpt_model = 6;
}

message Cookie {
  string name = 1;
  string value = 2;
}