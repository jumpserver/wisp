// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common.proto
// Protobuf C++ Version: 5.27.2

#include "common.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace message {

inline constexpr User::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        role_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_valid_{false},
        is_active_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR User::User(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserDefaultTypeInternal() {}
  union {
    User _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserDefaultTypeInternal _User_default_instance_;

inline constexpr TokenStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        detail_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_expired_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TokenStatus::TokenStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TokenStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TokenStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TokenStatusDefaultTypeInternal() {}
  union {
    TokenStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TokenStatusDefaultTypeInternal _TokenStatus_default_instance_;

inline constexpr Session::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        asset_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        remote_addr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        protocol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        org_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        asset_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        token_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        date_start_{::int64_t{0}},
        login_from_{static_cast< ::message::Session_LoginFrom >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Session::Session(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SessionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionDefaultTypeInternal() {}
  union {
    Session _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionDefaultTypeInternal _Session_default_instance_;

inline constexpr PublicSetting::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : gpt_base_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gpt_api_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gpt_proxy_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gpt_model_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        license_content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        xpack_enabled_{false},
        valid_license_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PublicSetting::PublicSetting(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PublicSettingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PublicSettingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PublicSettingDefaultTypeInternal() {}
  union {
    PublicSetting _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PublicSettingDefaultTypeInternal _PublicSetting_default_instance_;

inline constexpr Protocol::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0},
        port_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Protocol::Protocol(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProtocolDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtocolDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtocolDefaultTypeInternal() {}
  union {
    Protocol _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtocolDefaultTypeInternal _Protocol_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PlatformProtocol_SettingsEntry_DoNotUse::PlatformProtocol_SettingsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct PlatformProtocol_SettingsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlatformProtocol_SettingsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlatformProtocol_SettingsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    PlatformProtocol_SettingsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlatformProtocol_SettingsEntry_DoNotUseDefaultTypeInternal _PlatformProtocol_SettingsEntry_DoNotUse_default_instance_;

inline constexpr Permission::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : enable_connect_{false},
        enable_download_{false},
        enable_upload_{false},
        enable_copy_{false},
        enable_paste_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Permission::Permission(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PermissionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PermissionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PermissionDefaultTypeInternal() {}
  union {
    Permission _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PermissionDefaultTypeInternal _Permission_default_instance_;

inline constexpr LifecycleLogData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        event_{static_cast< ::message::LifecycleLogData_event_type >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LifecycleLogData::LifecycleLogData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LifecycleLogDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LifecycleLogDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LifecycleLogDataDefaultTypeInternal() {}
  union {
    LifecycleLogData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LifecycleLogDataDefaultTypeInternal _LifecycleLogData_default_instance_;

inline constexpr LabelValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : label_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LabelValue::LabelValue(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct LabelValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LabelValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LabelValueDefaultTypeInternal() {}
  union {
    LabelValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LabelValueDefaultTypeInternal _LabelValue_default_instance_;

inline constexpr Gateway::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        protocol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        private_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        port_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Gateway::Gateway(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GatewayDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GatewayDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GatewayDefaultTypeInternal() {}
  union {
    Gateway _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GatewayDefaultTypeInternal _Gateway_default_instance_;

inline constexpr Forward::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        host_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        port_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Forward::Forward(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ForwardDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ForwardDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ForwardDefaultTypeInternal() {}
  union {
    Forward _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ForwardDefaultTypeInternal _Forward_default_instance_;

inline constexpr ExpireInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : expire_at_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ExpireInfo::ExpireInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ExpireInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExpireInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExpireInfoDefaultTypeInternal() {}
  union {
    ExpireInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExpireInfoDefaultTypeInternal _ExpireInfo_default_instance_;

inline constexpr Cookie::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Cookie::Cookie(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CookieDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CookieDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CookieDefaultTypeInternal() {}
  union {
    Cookie _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CookieDefaultTypeInternal _Cookie_default_instance_;

inline constexpr ComponentSetting::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : max_idle_time_{0},
        max_session_time_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ComponentSetting::ComponentSetting(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ComponentSettingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComponentSettingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComponentSettingDefaultTypeInternal() {}
  union {
    ComponentSetting _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComponentSettingDefaultTypeInternal _ComponentSetting_default_instance_;

inline constexpr CommandGroup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pattern_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ignore_case_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CommandGroup::CommandGroup(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CommandGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommandGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommandGroupDefaultTypeInternal() {}
  union {
    CommandGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommandGroupDefaultTypeInternal _CommandGroup_default_instance_;

inline constexpr Asset_Specific::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : db_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ca_cert_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        client_cert_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        client_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        auto_fill_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        username_selector_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_selector_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        submit_selector_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        script_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        http_proxy_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pg_ssl_mode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        use_ssl_{false},
        allow_invalid_cert_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Asset_Specific::Asset_Specific(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Asset_SpecificDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Asset_SpecificDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Asset_SpecificDefaultTypeInternal() {}
  union {
    Asset_Specific _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Asset_SpecificDefaultTypeInternal _Asset_Specific_default_instance_;

inline constexpr TerminalTask::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        terminated_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_by_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        token_status_{nullptr},
        action_{static_cast< ::message::TaskAction >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR TerminalTask::TerminalTask(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TerminalTaskDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TerminalTaskDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TerminalTaskDefaultTypeInternal() {}
  union {
    TerminalTask _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TerminalTaskDefaultTypeInternal _TerminalTask_default_instance_;

inline constexpr PlatformProtocol::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : settings_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0},
        port_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlatformProtocol::PlatformProtocol(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlatformProtocolDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlatformProtocolDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlatformProtocolDefaultTypeInternal() {}
  union {
    PlatformProtocol _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlatformProtocolDefaultTypeInternal _PlatformProtocol_default_instance_;

inline constexpr CommandACL::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : command_groups_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        priority_{0},
        action_{static_cast< ::message::CommandACL_Action >(0)},
        is_active_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CommandACL::CommandACL(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CommandACLDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommandACLDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommandACLDefaultTypeInternal() {}
  union {
    CommandACL _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommandACLDefaultTypeInternal _CommandACL_default_instance_;

inline constexpr Asset::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        protocols_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        org_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        org_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        specific_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Asset::Asset(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AssetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssetDefaultTypeInternal() {}
  union {
    Asset _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssetDefaultTypeInternal _Asset_default_instance_;

inline constexpr Account::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        secret_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        secrettype_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Account::Account(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AccountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AccountDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AccountDefaultTypeInternal() {}
  union {
    Account _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AccountDefaultTypeInternal _Account_default_instance_;

inline constexpr Platform::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : protocols_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        charset_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Platform::Platform(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PlatformDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlatformDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlatformDefaultTypeInternal() {}
  union {
    Platform _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlatformDefaultTypeInternal _Platform_default_instance_;

inline constexpr TokenAuthInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        filter_rules_{},
        gateways_{},
        key_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        secrete_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        facemonitortoken_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        asset_{nullptr},
        user_{nullptr},
        account_{nullptr},
        permission_{nullptr},
        expire_info_{nullptr},
        setting_{nullptr},
        platform_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TokenAuthInfo::TokenAuthInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TokenAuthInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TokenAuthInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TokenAuthInfoDefaultTypeInternal() {}
  union {
    TokenAuthInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TokenAuthInfoDefaultTypeInternal _TokenAuthInfo_default_instance_;
}  // namespace message
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_common_2eproto[5];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_2eproto = nullptr;
const ::uint32_t
    TableStruct_common_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::message::User, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::User, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::message::User, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::message::User, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::message::User, _impl_.role_),
        PROTOBUF_FIELD_OFFSET(::message::User, _impl_.is_valid_),
        PROTOBUF_FIELD_OFFSET(::message::User, _impl_.is_active_),
        PROTOBUF_FIELD_OFFSET(::message::Account, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::message::Account, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::Account, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::message::Account, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::message::Account, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::message::Account, _impl_.secret_),
        PROTOBUF_FIELD_OFFSET(::message::Account, _impl_.secrettype_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::message::LabelValue, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::LabelValue, _impl_.label_),
        PROTOBUF_FIELD_OFFSET(::message::LabelValue, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::message::Asset_Specific, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::Asset_Specific, _impl_.db_name_),
        PROTOBUF_FIELD_OFFSET(::message::Asset_Specific, _impl_.use_ssl_),
        PROTOBUF_FIELD_OFFSET(::message::Asset_Specific, _impl_.ca_cert_),
        PROTOBUF_FIELD_OFFSET(::message::Asset_Specific, _impl_.client_cert_),
        PROTOBUF_FIELD_OFFSET(::message::Asset_Specific, _impl_.client_key_),
        PROTOBUF_FIELD_OFFSET(::message::Asset_Specific, _impl_.allow_invalid_cert_),
        PROTOBUF_FIELD_OFFSET(::message::Asset_Specific, _impl_.auto_fill_),
        PROTOBUF_FIELD_OFFSET(::message::Asset_Specific, _impl_.username_selector_),
        PROTOBUF_FIELD_OFFSET(::message::Asset_Specific, _impl_.password_selector_),
        PROTOBUF_FIELD_OFFSET(::message::Asset_Specific, _impl_.submit_selector_),
        PROTOBUF_FIELD_OFFSET(::message::Asset_Specific, _impl_.script_),
        PROTOBUF_FIELD_OFFSET(::message::Asset_Specific, _impl_.http_proxy_),
        PROTOBUF_FIELD_OFFSET(::message::Asset_Specific, _impl_.pg_ssl_mode_),
        PROTOBUF_FIELD_OFFSET(::message::Asset, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::message::Asset, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::Asset, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::message::Asset, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::message::Asset, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::message::Asset, _impl_.org_id_),
        PROTOBUF_FIELD_OFFSET(::message::Asset, _impl_.org_name_),
        PROTOBUF_FIELD_OFFSET(::message::Asset, _impl_.protocols_),
        PROTOBUF_FIELD_OFFSET(::message::Asset, _impl_.specific_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::message::Protocol, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::Protocol, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::message::Protocol, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::message::Protocol, _impl_.port_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::message::Gateway, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::Gateway, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::message::Gateway, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::message::Gateway, _impl_.ip_),
        PROTOBUF_FIELD_OFFSET(::message::Gateway, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::message::Gateway, _impl_.protocol_),
        PROTOBUF_FIELD_OFFSET(::message::Gateway, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::message::Gateway, _impl_.password_),
        PROTOBUF_FIELD_OFFSET(::message::Gateway, _impl_.private_key_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::message::Permission, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::Permission, _impl_.enable_connect_),
        PROTOBUF_FIELD_OFFSET(::message::Permission, _impl_.enable_download_),
        PROTOBUF_FIELD_OFFSET(::message::Permission, _impl_.enable_upload_),
        PROTOBUF_FIELD_OFFSET(::message::Permission, _impl_.enable_copy_),
        PROTOBUF_FIELD_OFFSET(::message::Permission, _impl_.enable_paste_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::message::CommandACL, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::CommandACL, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::message::CommandACL, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::message::CommandACL, _impl_.priority_),
        PROTOBUF_FIELD_OFFSET(::message::CommandACL, _impl_.action_),
        PROTOBUF_FIELD_OFFSET(::message::CommandACL, _impl_.is_active_),
        PROTOBUF_FIELD_OFFSET(::message::CommandACL, _impl_.command_groups_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::message::CommandGroup, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::CommandGroup, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::message::CommandGroup, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::message::CommandGroup, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::message::CommandGroup, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::message::CommandGroup, _impl_.pattern_),
        PROTOBUF_FIELD_OFFSET(::message::CommandGroup, _impl_.ignore_case_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::message::ExpireInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::ExpireInfo, _impl_.expire_at_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::message::Session, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::Session, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::message::Session, _impl_.user_),
        PROTOBUF_FIELD_OFFSET(::message::Session, _impl_.asset_),
        PROTOBUF_FIELD_OFFSET(::message::Session, _impl_.account_),
        PROTOBUF_FIELD_OFFSET(::message::Session, _impl_.login_from_),
        PROTOBUF_FIELD_OFFSET(::message::Session, _impl_.remote_addr_),
        PROTOBUF_FIELD_OFFSET(::message::Session, _impl_.protocol_),
        PROTOBUF_FIELD_OFFSET(::message::Session, _impl_.date_start_),
        PROTOBUF_FIELD_OFFSET(::message::Session, _impl_.org_id_),
        PROTOBUF_FIELD_OFFSET(::message::Session, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::message::Session, _impl_.asset_id_),
        PROTOBUF_FIELD_OFFSET(::message::Session, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::message::Session, _impl_.token_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::message::TokenStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::TokenStatus, _impl_.code_),
        PROTOBUF_FIELD_OFFSET(::message::TokenStatus, _impl_.detail_),
        PROTOBUF_FIELD_OFFSET(::message::TokenStatus, _impl_.is_expired_),
        PROTOBUF_FIELD_OFFSET(::message::TerminalTask, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::message::TerminalTask, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::TerminalTask, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::message::TerminalTask, _impl_.action_),
        PROTOBUF_FIELD_OFFSET(::message::TerminalTask, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::message::TerminalTask, _impl_.terminated_by_),
        PROTOBUF_FIELD_OFFSET(::message::TerminalTask, _impl_.created_by_),
        PROTOBUF_FIELD_OFFSET(::message::TerminalTask, _impl_.token_status_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::message::TokenAuthInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::message::TokenAuthInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::TokenAuthInfo, _impl_.key_id_),
        PROTOBUF_FIELD_OFFSET(::message::TokenAuthInfo, _impl_.secrete_id_),
        PROTOBUF_FIELD_OFFSET(::message::TokenAuthInfo, _impl_.asset_),
        PROTOBUF_FIELD_OFFSET(::message::TokenAuthInfo, _impl_.user_),
        PROTOBUF_FIELD_OFFSET(::message::TokenAuthInfo, _impl_.account_),
        PROTOBUF_FIELD_OFFSET(::message::TokenAuthInfo, _impl_.permission_),
        PROTOBUF_FIELD_OFFSET(::message::TokenAuthInfo, _impl_.expire_info_),
        PROTOBUF_FIELD_OFFSET(::message::TokenAuthInfo, _impl_.filter_rules_),
        PROTOBUF_FIELD_OFFSET(::message::TokenAuthInfo, _impl_.gateways_),
        PROTOBUF_FIELD_OFFSET(::message::TokenAuthInfo, _impl_.setting_),
        PROTOBUF_FIELD_OFFSET(::message::TokenAuthInfo, _impl_.platform_),
        PROTOBUF_FIELD_OFFSET(::message::TokenAuthInfo, _impl_.facemonitortoken_),
        ~0u,
        ~0u,
        0,
        1,
        2,
        3,
        4,
        ~0u,
        ~0u,
        5,
        6,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::message::Platform, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::Platform, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::message::Platform, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::message::Platform, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::message::Platform, _impl_.charset_),
        PROTOBUF_FIELD_OFFSET(::message::Platform, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::message::Platform, _impl_.protocols_),
        PROTOBUF_FIELD_OFFSET(::message::PlatformProtocol_SettingsEntry_DoNotUse, _has_bits_),
        PROTOBUF_FIELD_OFFSET(::message::PlatformProtocol_SettingsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::PlatformProtocol_SettingsEntry_DoNotUse, key_),
        PROTOBUF_FIELD_OFFSET(::message::PlatformProtocol_SettingsEntry_DoNotUse, value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::message::PlatformProtocol, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::PlatformProtocol, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::message::PlatformProtocol, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::message::PlatformProtocol, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::message::PlatformProtocol, _impl_.settings_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::message::ComponentSetting, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::ComponentSetting, _impl_.max_idle_time_),
        PROTOBUF_FIELD_OFFSET(::message::ComponentSetting, _impl_.max_session_time_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::message::Forward, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::Forward, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::message::Forward, _impl_.host_),
        PROTOBUF_FIELD_OFFSET(::message::Forward, _impl_.port_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::message::PublicSetting, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::PublicSetting, _impl_.xpack_enabled_),
        PROTOBUF_FIELD_OFFSET(::message::PublicSetting, _impl_.valid_license_),
        PROTOBUF_FIELD_OFFSET(::message::PublicSetting, _impl_.gpt_base_url_),
        PROTOBUF_FIELD_OFFSET(::message::PublicSetting, _impl_.gpt_api_key_),
        PROTOBUF_FIELD_OFFSET(::message::PublicSetting, _impl_.gpt_proxy_),
        PROTOBUF_FIELD_OFFSET(::message::PublicSetting, _impl_.gpt_model_),
        PROTOBUF_FIELD_OFFSET(::message::PublicSetting, _impl_.license_content_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::message::Cookie, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::Cookie, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::message::Cookie, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::message::LifecycleLogData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::message::LifecycleLogData, _impl_.event_),
        PROTOBUF_FIELD_OFFSET(::message::LifecycleLogData, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::message::LifecycleLogData, _impl_.user_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::message::User)},
        {14, 27, -1, sizeof(::message::Account)},
        {32, -1, -1, sizeof(::message::LabelValue)},
        {42, -1, -1, sizeof(::message::Asset_Specific)},
        {63, 78, -1, sizeof(::message::Asset)},
        {85, -1, -1, sizeof(::message::Protocol)},
        {96, -1, -1, sizeof(::message::Gateway)},
        {112, -1, -1, sizeof(::message::Permission)},
        {125, -1, -1, sizeof(::message::CommandACL)},
        {139, -1, -1, sizeof(::message::CommandGroup)},
        {153, -1, -1, sizeof(::message::ExpireInfo)},
        {162, -1, -1, sizeof(::message::Session)},
        {183, -1, -1, sizeof(::message::TokenStatus)},
        {194, 208, -1, sizeof(::message::TerminalTask)},
        {214, 234, -1, sizeof(::message::TokenAuthInfo)},
        {246, -1, -1, sizeof(::message::Platform)},
        {260, 270, -1, sizeof(::message::PlatformProtocol_SettingsEntry_DoNotUse)},
        {272, -1, -1, sizeof(::message::PlatformProtocol)},
        {284, -1, -1, sizeof(::message::ComponentSetting)},
        {294, -1, -1, sizeof(::message::Forward)},
        {305, -1, -1, sizeof(::message::PublicSetting)},
        {320, -1, -1, sizeof(::message::Cookie)},
        {330, -1, -1, sizeof(::message::LifecycleLogData)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::message::_User_default_instance_._instance,
    &::message::_Account_default_instance_._instance,
    &::message::_LabelValue_default_instance_._instance,
    &::message::_Asset_Specific_default_instance_._instance,
    &::message::_Asset_default_instance_._instance,
    &::message::_Protocol_default_instance_._instance,
    &::message::_Gateway_default_instance_._instance,
    &::message::_Permission_default_instance_._instance,
    &::message::_CommandACL_default_instance_._instance,
    &::message::_CommandGroup_default_instance_._instance,
    &::message::_ExpireInfo_default_instance_._instance,
    &::message::_Session_default_instance_._instance,
    &::message::_TokenStatus_default_instance_._instance,
    &::message::_TerminalTask_default_instance_._instance,
    &::message::_TokenAuthInfo_default_instance_._instance,
    &::message::_Platform_default_instance_._instance,
    &::message::_PlatformProtocol_SettingsEntry_DoNotUse_default_instance_._instance,
    &::message::_PlatformProtocol_default_instance_._instance,
    &::message::_ComponentSetting_default_instance_._instance,
    &::message::_Forward_default_instance_._instance,
    &::message::_PublicSetting_default_instance_._instance,
    &::message::_Cookie_default_instance_._instance,
    &::message::_LifecycleLogData_default_instance_._instance,
};
const char descriptor_table_protodef_common_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014common.proto\022\007message\"e\n\004User\022\n\n\002id\030\001 "
    "\001(\t\022\014\n\004name\030\002 \001(\t\022\020\n\010username\030\003 \001(\t\022\014\n\004r"
    "ole\030\004 \001(\t\022\020\n\010is_valid\030\005 \001(\010\022\021\n\tis_active"
    "\030\006 \001(\010\"n\n\007Account\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 "
    "\001(\t\022\020\n\010username\030\004 \001(\t\022\016\n\006secret\030\005 \001(\t\022\'\n"
    "\nsecretType\030\006 \001(\0132\023.message.LabelValue\"*"
    "\n\nLabelValue\022\r\n\005label\030\001 \001(\t\022\r\n\005value\030\002 \001"
    "(\t\"\305\003\n\005Asset\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\017"
    "\n\007address\030\003 \001(\t\022\016\n\006org_id\030\004 \001(\t\022\020\n\010org_n"
    "ame\030\005 \001(\t\022$\n\tprotocols\030\006 \003(\0132\021.message.P"
    "rotocol\022)\n\010specific\030\007 \001(\0132\027.message.Asse"
    "t.Specific\032\235\002\n\010Specific\022\017\n\007db_name\030\001 \001(\t"
    "\022\017\n\007use_ssl\030\002 \001(\010\022\017\n\007ca_cert\030\003 \001(\t\022\023\n\013cl"
    "ient_cert\030\004 \001(\t\022\022\n\nclient_key\030\005 \001(\t\022\032\n\022a"
    "llow_invalid_cert\030\006 \001(\010\022\021\n\tauto_fill\030\007 \001"
    "(\t\022\031\n\021username_selector\030\010 \001(\t\022\031\n\021passwor"
    "d_selector\030\t \001(\t\022\027\n\017submit_selector\030\n \001("
    "\t\022\016\n\006script\030\013 \001(\t\022\022\n\nhttp_proxy\030\014 \001(\t\022\023\n"
    "\013pg_ssl_mode\030\r \001(\t\"2\n\010Protocol\022\014\n\004name\030\002"
    " \001(\t\022\n\n\002id\030\001 \001(\005\022\014\n\004port\030\003 \001(\005\"\210\001\n\007Gatew"
    "ay\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\n\n\002ip\030\003 \001(\t"
    "\022\014\n\004port\030\004 \001(\005\022\020\n\010protocol\030\005 \001(\t\022\020\n\010user"
    "name\030\006 \001(\t\022\020\n\010password\030\007 \001(\t\022\023\n\013private_"
    "key\030\010 \001(\t\"\177\n\nPermission\022\026\n\016enable_connec"
    "t\030\001 \001(\010\022\027\n\017enable_download\030\002 \001(\010\022\025\n\renab"
    "le_upload\030\003 \001(\010\022\023\n\013enable_copy\030\004 \001(\010\022\024\n\014"
    "enable_paste\030\005 \001(\010\"\201\002\n\nCommandACL\022\n\n\002id\030"
    "\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\020\n\010priority\030\003 \001(\005\022*\n"
    "\006action\030\005 \001(\0162\032.message.CommandACL.Actio"
    "n\022\021\n\tis_active\030\006 \001(\010\022-\n\016command_groups\030\007"
    " \003(\0132\025.message.CommandGroup\"Y\n\006Action\022\n\n"
    "\006Reject\020\000\022\n\n\006Accept\020\001\022\n\n\006Review\020\002\022\013\n\007War"
    "ning\020\003\022\021\n\rNotifyWarning\020\004\022\013\n\007Unknown\020\005\"m"
    "\n\014CommandGroup\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t"
    "\022\017\n\007content\030\003 \001(\t\022\014\n\004Type\030\004 \001(\t\022\017\n\007patte"
    "rn\030\005 \001(\t\022\023\n\013ignore_case\030\006 \001(\010\"\037\n\nExpireI"
    "nfo\022\021\n\texpire_at\030\001 \001(\003\"\264\002\n\007Session\022\n\n\002id"
    "\030\001 \001(\t\022\014\n\004user\030\002 \001(\t\022\r\n\005asset\030\003 \001(\t\022\017\n\007a"
    "ccount\030\004 \001(\t\022.\n\nlogin_from\030\005 \001(\0162\032.messa"
    "ge.Session.LoginFrom\022\023\n\013remote_addr\030\006 \001("
    "\t\022\020\n\010protocol\030\007 \001(\t\022\022\n\ndate_start\030\010 \001(\003\022"
    "\016\n\006org_id\030\t \001(\t\022\017\n\007user_id\030\n \001(\t\022\020\n\010asse"
    "t_id\030\013 \001(\t\022\022\n\naccount_id\030\014 \001(\t\022\020\n\010token_"
    "id\030\r \001(\t\"+\n\tLoginFrom\022\006\n\002WT\020\000\022\006\n\002ST\020\001\022\006\n"
    "\002RT\020\002\022\006\n\002DT\020\003\"\?\n\013TokenStatus\022\014\n\004code\030\001 \001"
    "(\t\022\016\n\006detail\030\002 \001(\t\022\022\n\nis_expired\030\003 \001(\010\"\252"
    "\001\n\014TerminalTask\022\n\n\002id\030\001 \001(\t\022#\n\006action\030\002 "
    "\001(\0162\023.message.TaskAction\022\022\n\nsession_id\030\003"
    " \001(\t\022\025\n\rterminated_by\030\004 \001(\t\022\022\n\ncreated_b"
    "y\030\005 \001(\t\022*\n\014token_status\030\006 \001(\0132\024.message."
    "TokenStatus\"\237\003\n\rTokenAuthInfo\022\016\n\006key_id\030"
    "\001 \001(\t\022\022\n\nsecrete_id\030\002 \001(\t\022\035\n\005asset\030\003 \001(\013"
    "2\016.message.Asset\022\033\n\004user\030\004 \001(\0132\r.message"
    ".User\022!\n\007account\030\005 \001(\0132\020.message.Account"
    "\022\'\n\npermission\030\006 \001(\0132\023.message.Permissio"
    "n\022(\n\013expire_info\030\007 \001(\0132\023.message.ExpireI"
    "nfo\022)\n\014filter_rules\030\010 \003(\0132\023.message.Comm"
    "andACL\022\"\n\010gateways\030\t \003(\0132\020.message.Gatew"
    "ay\022*\n\007setting\030\n \001(\0132\031.message.ComponentS"
    "etting\022#\n\010platform\030\013 \001(\0132\021.message.Platf"
    "orm\022\030\n\020FaceMonitorToken\030\014 \001(\t\"\203\001\n\010Platfo"
    "rm\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\020\n\010category"
    "\030\003 \001(\t\022\017\n\007charset\030\004 \001(\t\022\014\n\004type\030\005 \001(\t\022,\n"
    "\tprotocols\030\006 \003(\0132\031.message.PlatformProto"
    "col\"\246\001\n\020PlatformProtocol\022\n\n\002id\030\001 \001(\005\022\014\n\004"
    "name\030\002 \001(\t\022\014\n\004port\030\003 \001(\005\0229\n\010settings\030\004 \003"
    "(\0132\'.message.PlatformProtocol.SettingsEn"
    "try\032/\n\rSettingsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val"
    "ue\030\002 \001(\t:\0028\001\"C\n\020ComponentSetting\022\025\n\rmax_"
    "idle_time\030\001 \001(\005\022\030\n\020max_session_time\030\002 \001("
    "\005\"1\n\007Forward\022\n\n\002id\030\001 \001(\t\022\014\n\004Host\030\002 \001(\t\022\014"
    "\n\004port\030\003 \001(\005\"\247\001\n\rPublicSetting\022\025\n\rxpack_"
    "enabled\030\001 \001(\010\022\025\n\rvalid_license\030\002 \001(\010\022\024\n\014"
    "gpt_base_url\030\003 \001(\t\022\023\n\013gpt_api_key\030\004 \001(\t\022"
    "\021\n\tgpt_proxy\030\005 \001(\t\022\021\n\tgpt_model\030\006 \001(\t\022\027\n"
    "\017license_content\030\007 \001(\t\"%\n\006Cookie\022\014\n\004name"
    "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"\250\003\n\020LifecycleLogDa"
    "ta\0223\n\005event\030\001 \001(\0162$.message.LifecycleLog"
    "Data.event_type\022\016\n\006reason\030\002 \001(\t\022\014\n\004user\030"
    "\003 \001(\t\"\300\002\n\nevent_type\022\027\n\023AssetConnectSucc"
    "ess\020\000\022\030\n\024AssetConnectFinished\020\001\022\023\n\017Creat"
    "eShareLink\020\002\022\023\n\017UserJoinSession\020\003\022\024\n\020Use"
    "rLeaveSession\020\004\022\024\n\020AdminJoinMonitor\020\005\022\024\n"
    "\020AdminExitMonitor\020\006\022\026\n\022ReplayConvertStar"
    "t\020\007\022\030\n\024ReplayConvertSuccess\020\010\022\030\n\024ReplayC"
    "onvertFailure\020\t\022\025\n\021ReplayUploadStart\020\n\022\027"
    "\n\023ReplayUploadSuccess\020\013\022\027\n\023ReplayUploadF"
    "ailure\020\014*k\n\nTaskAction\022\017\n\013KillSession\020\000\022"
    "\017\n\013LockSession\020\001\022\021\n\rUnlockSession\020\002\022\024\n\020T"
    "okenPermExpired\020\003\022\022\n\016TokenPermValid\020\004*f\n"
    "\tRiskLevel\022\n\n\006Normal\020\000\022\013\n\007Warning\020\001\022\n\n\006R"
    "eject\020\002\022\020\n\014ReviewReject\020\003\022\020\n\014ReviewAccep"
    "t\020\004\022\020\n\014ReviewCancel\020\005B \n\023org.jumpserver."
    "wispZ\t/protobufb\006proto3"
};
static ::absl::once_flag descriptor_table_common_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_common_2eproto = {
    false,
    false,
    3743,
    descriptor_table_protodef_common_2eproto,
    "common.proto",
    &descriptor_table_common_2eproto_once,
    nullptr,
    0,
    23,
    schemas,
    file_default_instances,
    TableStruct_common_2eproto::offsets,
    file_level_enum_descriptors_common_2eproto,
    file_level_service_descriptors_common_2eproto,
};
namespace message {
const ::google::protobuf::EnumDescriptor* CommandACL_Action_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t CommandACL_Action_internal_data_[] = {
    393216u, 0u, };
bool CommandACL_Action_IsValid(int value) {
  return 0 <= value && value <= 5;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CommandACL_Action CommandACL::Reject;
constexpr CommandACL_Action CommandACL::Accept;
constexpr CommandACL_Action CommandACL::Review;
constexpr CommandACL_Action CommandACL::Warning;
constexpr CommandACL_Action CommandACL::NotifyWarning;
constexpr CommandACL_Action CommandACL::Unknown;
constexpr CommandACL_Action CommandACL::Action_MIN;
constexpr CommandACL_Action CommandACL::Action_MAX;
constexpr int CommandACL::Action_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Session_LoginFrom_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t Session_LoginFrom_internal_data_[] = {
    262144u, 0u, };
bool Session_LoginFrom_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Session_LoginFrom Session::WT;
constexpr Session_LoginFrom Session::ST;
constexpr Session_LoginFrom Session::RT;
constexpr Session_LoginFrom Session::DT;
constexpr Session_LoginFrom Session::LoginFrom_MIN;
constexpr Session_LoginFrom Session::LoginFrom_MAX;
constexpr int Session::LoginFrom_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* LifecycleLogData_event_type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t LifecycleLogData_event_type_internal_data_[] = {
    851968u, 0u, };
bool LifecycleLogData_event_type_IsValid(int value) {
  return 0 <= value && value <= 12;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr LifecycleLogData_event_type LifecycleLogData::AssetConnectSuccess;
constexpr LifecycleLogData_event_type LifecycleLogData::AssetConnectFinished;
constexpr LifecycleLogData_event_type LifecycleLogData::CreateShareLink;
constexpr LifecycleLogData_event_type LifecycleLogData::UserJoinSession;
constexpr LifecycleLogData_event_type LifecycleLogData::UserLeaveSession;
constexpr LifecycleLogData_event_type LifecycleLogData::AdminJoinMonitor;
constexpr LifecycleLogData_event_type LifecycleLogData::AdminExitMonitor;
constexpr LifecycleLogData_event_type LifecycleLogData::ReplayConvertStart;
constexpr LifecycleLogData_event_type LifecycleLogData::ReplayConvertSuccess;
constexpr LifecycleLogData_event_type LifecycleLogData::ReplayConvertFailure;
constexpr LifecycleLogData_event_type LifecycleLogData::ReplayUploadStart;
constexpr LifecycleLogData_event_type LifecycleLogData::ReplayUploadSuccess;
constexpr LifecycleLogData_event_type LifecycleLogData::ReplayUploadFailure;
constexpr LifecycleLogData_event_type LifecycleLogData::event_type_MIN;
constexpr LifecycleLogData_event_type LifecycleLogData::event_type_MAX;
constexpr int LifecycleLogData::event_type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* TaskAction_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t TaskAction_internal_data_[] = {
    327680u, 0u, };
bool TaskAction_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* RiskLevel_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t RiskLevel_internal_data_[] = {
    393216u, 0u, };
bool RiskLevel_IsValid(int value) {
  return 0 <= value && value <= 5;
}
// ===================================================================

class User::_Internal {
 public:
};

User::User(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.User)
}
inline PROTOBUF_NDEBUG_INLINE User::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::User& from_msg)
      : id_(arena, from.id_),
        name_(arena, from.name_),
        username_(arena, from.username_),
        role_(arena, from.role_),
        _cached_size_{0} {}

User::User(
    ::google::protobuf::Arena* arena,
    const User& from)
    : ::google::protobuf::Message(arena) {
  User* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_valid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, is_valid_),
           offsetof(Impl_, is_active_) -
               offsetof(Impl_, is_valid_) +
               sizeof(Impl_::is_active_));

  // @@protoc_insertion_point(copy_constructor:message.User)
}
inline PROTOBUF_NDEBUG_INLINE User::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        name_(arena),
        username_(arena),
        role_(arena),
        _cached_size_{0} {}

inline void User::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, is_valid_),
           0,
           offsetof(Impl_, is_active_) -
               offsetof(Impl_, is_valid_) +
               sizeof(Impl_::is_active_));
}
User::~User() {
  // @@protoc_insertion_point(destructor:message.User)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void User::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.username_.Destroy();
  _impl_.role_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
User::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(User, _impl_._cached_size_),
              false,
          },
          &User::MergeImpl,
          &User::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 39, 2> User::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_User_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::User>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.name_)}},
    // string username = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.username_)}},
    // string role = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.role_)}},
    // bool is_valid = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(User, _impl_.is_valid_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.is_valid_)}},
    // bool is_active = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(User, _impl_.is_active_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(User, _impl_.is_active_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string username = 3;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string role = 4;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.role_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_valid = 5;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.is_valid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool is_active = 6;
    {PROTOBUF_FIELD_OFFSET(User, _impl_.is_active_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\14\2\4\10\4\0\0\0"
    "message.User"
    "id"
    "name"
    "username"
    "role"
  }},
};

PROTOBUF_NOINLINE void User::Clear() {
// @@protoc_insertion_point(message_clear_start:message.User)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.username_.ClearToEmpty();
  _impl_.role_.ClearToEmpty();
  ::memset(&_impl_.is_valid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_active_) -
      reinterpret_cast<char*>(&_impl_.is_valid_)) + sizeof(_impl_.is_active_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* User::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.User)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.User.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.User.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string username = 3;
  if (!this->_internal_username().empty()) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.User.username");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string role = 4;
  if (!this->_internal_role().empty()) {
    const std::string& _s = this->_internal_role();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.User.role");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // bool is_valid = 5;
  if (this->_internal_is_valid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_is_valid(), target);
  }

  // bool is_active = 6;
  if (this->_internal_is_active() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_is_active(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.User)
  return target;
}

::size_t User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.User)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string username = 3;
  if (!this->_internal_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_username());
  }

  // string role = 4;
  if (!this->_internal_role().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_role());
  }

  // bool is_valid = 5;
  if (this->_internal_is_valid() != 0) {
    total_size += 2;
  }

  // bool is_active = 6;
  if (this->_internal_is_active() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void User::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<User*>(&to_msg);
  auto& from = static_cast<const User&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.User)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_role().empty()) {
    _this->_internal_set_role(from._internal_role());
  }
  if (from._internal_is_valid() != 0) {
    _this->_impl_.is_valid_ = from._impl_.is_valid_;
  }
  if (from._internal_is_active() != 0) {
    _this->_impl_.is_active_ = from._impl_.is_active_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void User::InternalSwap(User* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.role_, &other->_impl_.role_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(User, _impl_.is_active_)
      + sizeof(User::_impl_.is_active_)
      - PROTOBUF_FIELD_OFFSET(User, _impl_.is_valid_)>(
          reinterpret_cast<char*>(&_impl_.is_valid_),
          reinterpret_cast<char*>(&other->_impl_.is_valid_));
}

::google::protobuf::Metadata User::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Account::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Account>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Account, _impl_._has_bits_);
};

Account::Account(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.Account)
}
inline PROTOBUF_NDEBUG_INLINE Account::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::Account& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        name_(arena, from.name_),
        username_(arena, from.username_),
        secret_(arena, from.secret_) {}

Account::Account(
    ::google::protobuf::Arena* arena,
    const Account& from)
    : ::google::protobuf::Message(arena) {
  Account* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.secrettype_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::message::LabelValue>(
                              arena, *from._impl_.secrettype_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:message.Account)
}
inline PROTOBUF_NDEBUG_INLINE Account::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        name_(arena),
        username_(arena),
        secret_(arena) {}

inline void Account::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.secrettype_ = {};
}
Account::~Account() {
  // @@protoc_insertion_point(destructor:message.Account)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Account::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.username_.Destroy();
  _impl_.secret_.Destroy();
  delete _impl_.secrettype_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Account::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Account, _impl_._cached_size_),
              false,
          },
          &Account::MergeImpl,
          &Account::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 44, 2> Account::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Account, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967236,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Account_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::Account>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Account, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Account, _impl_.name_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string username = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Account, _impl_.username_)}},
    // string secret = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Account, _impl_.secret_)}},
    // .message.LabelValue secretType = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(Account, _impl_.secrettype_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(Account, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(Account, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string username = 4;
    {PROTOBUF_FIELD_OFFSET(Account, _impl_.username_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string secret = 5;
    {PROTOBUF_FIELD_OFFSET(Account, _impl_.secret_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .message.LabelValue secretType = 6;
    {PROTOBUF_FIELD_OFFSET(Account, _impl_.secrettype_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::message::LabelValue>()},
  }}, {{
    "\17\2\4\10\6\0\0\0"
    "message.Account"
    "id"
    "name"
    "username"
    "secret"
  }},
};

PROTOBUF_NOINLINE void Account::Clear() {
// @@protoc_insertion_point(message_clear_start:message.Account)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.username_.ClearToEmpty();
  _impl_.secret_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.secrettype_ != nullptr);
    _impl_.secrettype_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Account::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.Account)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Account.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Account.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string username = 4;
  if (!this->_internal_username().empty()) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Account.username");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string secret = 5;
  if (!this->_internal_secret().empty()) {
    const std::string& _s = this->_internal_secret();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Account.secret");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .message.LabelValue secretType = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.secrettype_, _impl_.secrettype_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.Account)
  return target;
}

::size_t Account::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.Account)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string username = 4;
  if (!this->_internal_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_username());
  }

  // string secret = 5;
  if (!this->_internal_secret().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_secret());
  }

  // .message.LabelValue secretType = 6;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.secrettype_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Account::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Account*>(&to_msg);
  auto& from = static_cast<const Account&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:message.Account)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_secret().empty()) {
    _this->_internal_set_secret(from._internal_secret());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.secrettype_ != nullptr);
    if (_this->_impl_.secrettype_ == nullptr) {
      _this->_impl_.secrettype_ =
          ::google::protobuf::Message::CopyConstruct<::message::LabelValue>(arena, *from._impl_.secrettype_);
    } else {
      _this->_impl_.secrettype_->MergeFrom(*from._impl_.secrettype_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Account::CopyFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Account::InternalSwap(Account* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.secret_, &other->_impl_.secret_, arena);
  swap(_impl_.secrettype_, other->_impl_.secrettype_);
}

::google::protobuf::Metadata Account::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LabelValue::_Internal {
 public:
};

LabelValue::LabelValue(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.LabelValue)
}
inline PROTOBUF_NDEBUG_INLINE LabelValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::LabelValue& from_msg)
      : label_(arena, from.label_),
        value_(arena, from.value_),
        _cached_size_{0} {}

LabelValue::LabelValue(
    ::google::protobuf::Arena* arena,
    const LabelValue& from)
    : ::google::protobuf::Message(arena) {
  LabelValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:message.LabelValue)
}
inline PROTOBUF_NDEBUG_INLINE LabelValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : label_(arena),
        value_(arena),
        _cached_size_{0} {}

inline void LabelValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LabelValue::~LabelValue() {
  // @@protoc_insertion_point(destructor:message.LabelValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LabelValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.label_.Destroy();
  _impl_.value_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
LabelValue::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(LabelValue, _impl_._cached_size_),
              false,
          },
          &LabelValue::MergeImpl,
          &LabelValue::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 37, 2> LabelValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LabelValue_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::LabelValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LabelValue, _impl_.value_)}},
    // string label = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LabelValue, _impl_.label_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string label = 1;
    {PROTOBUF_FIELD_OFFSET(LabelValue, _impl_.label_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(LabelValue, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\5\5\0\0\0\0\0"
    "message.LabelValue"
    "label"
    "value"
  }},
};

PROTOBUF_NOINLINE void LabelValue::Clear() {
// @@protoc_insertion_point(message_clear_start:message.LabelValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.label_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* LabelValue::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.LabelValue)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string label = 1;
  if (!this->_internal_label().empty()) {
    const std::string& _s = this->_internal_label();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.LabelValue.label");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string value = 2;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.LabelValue.value");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.LabelValue)
  return target;
}

::size_t LabelValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.LabelValue)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string label = 1;
  if (!this->_internal_label().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_label());
  }

  // string value = 2;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void LabelValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LabelValue*>(&to_msg);
  auto& from = static_cast<const LabelValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.LabelValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_label().empty()) {
    _this->_internal_set_label(from._internal_label());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LabelValue::CopyFrom(const LabelValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.LabelValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LabelValue::InternalSwap(LabelValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.label_, &other->_impl_.label_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

::google::protobuf::Metadata LabelValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Asset_Specific::_Internal {
 public:
};

Asset_Specific::Asset_Specific(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.Asset.Specific)
}
inline PROTOBUF_NDEBUG_INLINE Asset_Specific::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::Asset_Specific& from_msg)
      : db_name_(arena, from.db_name_),
        ca_cert_(arena, from.ca_cert_),
        client_cert_(arena, from.client_cert_),
        client_key_(arena, from.client_key_),
        auto_fill_(arena, from.auto_fill_),
        username_selector_(arena, from.username_selector_),
        password_selector_(arena, from.password_selector_),
        submit_selector_(arena, from.submit_selector_),
        script_(arena, from.script_),
        http_proxy_(arena, from.http_proxy_),
        pg_ssl_mode_(arena, from.pg_ssl_mode_),
        _cached_size_{0} {}

Asset_Specific::Asset_Specific(
    ::google::protobuf::Arena* arena,
    const Asset_Specific& from)
    : ::google::protobuf::Message(arena) {
  Asset_Specific* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, use_ssl_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, use_ssl_),
           offsetof(Impl_, allow_invalid_cert_) -
               offsetof(Impl_, use_ssl_) +
               sizeof(Impl_::allow_invalid_cert_));

  // @@protoc_insertion_point(copy_constructor:message.Asset.Specific)
}
inline PROTOBUF_NDEBUG_INLINE Asset_Specific::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : db_name_(arena),
        ca_cert_(arena),
        client_cert_(arena),
        client_key_(arena),
        auto_fill_(arena),
        username_selector_(arena),
        password_selector_(arena),
        submit_selector_(arena),
        script_(arena),
        http_proxy_(arena),
        pg_ssl_mode_(arena),
        _cached_size_{0} {}

inline void Asset_Specific::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, use_ssl_),
           0,
           offsetof(Impl_, allow_invalid_cert_) -
               offsetof(Impl_, use_ssl_) +
               sizeof(Impl_::allow_invalid_cert_));
}
Asset_Specific::~Asset_Specific() {
  // @@protoc_insertion_point(destructor:message.Asset.Specific)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Asset_Specific::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.db_name_.Destroy();
  _impl_.ca_cert_.Destroy();
  _impl_.client_cert_.Destroy();
  _impl_.client_key_.Destroy();
  _impl_.auto_fill_.Destroy();
  _impl_.username_selector_.Destroy();
  _impl_.password_selector_.Destroy();
  _impl_.submit_selector_.Destroy();
  _impl_.script_.Destroy();
  _impl_.http_proxy_.Destroy();
  _impl_.pg_ssl_mode_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Asset_Specific::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_._cached_size_),
              false,
          },
          &Asset_Specific::MergeImpl,
          &Asset_Specific::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 0, 159, 2> Asset_Specific::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Asset_Specific_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::Asset_Specific>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string db_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.db_name_)}},
    // bool use_ssl = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Asset_Specific, _impl_.use_ssl_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.use_ssl_)}},
    // string ca_cert = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.ca_cert_)}},
    // string client_cert = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.client_cert_)}},
    // string client_key = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.client_key_)}},
    // bool allow_invalid_cert = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Asset_Specific, _impl_.allow_invalid_cert_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.allow_invalid_cert_)}},
    // string auto_fill = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.auto_fill_)}},
    // string username_selector = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.username_selector_)}},
    // string password_selector = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.password_selector_)}},
    // string submit_selector = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.submit_selector_)}},
    // string script = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.script_)}},
    // string http_proxy = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.http_proxy_)}},
    // string pg_ssl_mode = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.pg_ssl_mode_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string db_name = 1;
    {PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.db_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool use_ssl = 2;
    {PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.use_ssl_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string ca_cert = 3;
    {PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.ca_cert_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string client_cert = 4;
    {PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.client_cert_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string client_key = 5;
    {PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.client_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool allow_invalid_cert = 6;
    {PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.allow_invalid_cert_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string auto_fill = 7;
    {PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.auto_fill_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string username_selector = 8;
    {PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.username_selector_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password_selector = 9;
    {PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.password_selector_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string submit_selector = 10;
    {PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.submit_selector_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string script = 11;
    {PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.script_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string http_proxy = 12;
    {PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.http_proxy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string pg_ssl_mode = 13;
    {PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.pg_ssl_mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\7\0\7\13\12\0\11\21\21\17\6\12\13\0\0"
    "message.Asset.Specific"
    "db_name"
    "ca_cert"
    "client_cert"
    "client_key"
    "auto_fill"
    "username_selector"
    "password_selector"
    "submit_selector"
    "script"
    "http_proxy"
    "pg_ssl_mode"
  }},
};

PROTOBUF_NOINLINE void Asset_Specific::Clear() {
// @@protoc_insertion_point(message_clear_start:message.Asset.Specific)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.db_name_.ClearToEmpty();
  _impl_.ca_cert_.ClearToEmpty();
  _impl_.client_cert_.ClearToEmpty();
  _impl_.client_key_.ClearToEmpty();
  _impl_.auto_fill_.ClearToEmpty();
  _impl_.username_selector_.ClearToEmpty();
  _impl_.password_selector_.ClearToEmpty();
  _impl_.submit_selector_.ClearToEmpty();
  _impl_.script_.ClearToEmpty();
  _impl_.http_proxy_.ClearToEmpty();
  _impl_.pg_ssl_mode_.ClearToEmpty();
  ::memset(&_impl_.use_ssl_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.allow_invalid_cert_) -
      reinterpret_cast<char*>(&_impl_.use_ssl_)) + sizeof(_impl_.allow_invalid_cert_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Asset_Specific::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.Asset.Specific)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    const std::string& _s = this->_internal_db_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Asset.Specific.db_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // bool use_ssl = 2;
  if (this->_internal_use_ssl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_use_ssl(), target);
  }

  // string ca_cert = 3;
  if (!this->_internal_ca_cert().empty()) {
    const std::string& _s = this->_internal_ca_cert();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Asset.Specific.ca_cert");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string client_cert = 4;
  if (!this->_internal_client_cert().empty()) {
    const std::string& _s = this->_internal_client_cert();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Asset.Specific.client_cert");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string client_key = 5;
  if (!this->_internal_client_key().empty()) {
    const std::string& _s = this->_internal_client_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Asset.Specific.client_key");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // bool allow_invalid_cert = 6;
  if (this->_internal_allow_invalid_cert() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_allow_invalid_cert(), target);
  }

  // string auto_fill = 7;
  if (!this->_internal_auto_fill().empty()) {
    const std::string& _s = this->_internal_auto_fill();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Asset.Specific.auto_fill");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // string username_selector = 8;
  if (!this->_internal_username_selector().empty()) {
    const std::string& _s = this->_internal_username_selector();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Asset.Specific.username_selector");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // string password_selector = 9;
  if (!this->_internal_password_selector().empty()) {
    const std::string& _s = this->_internal_password_selector();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Asset.Specific.password_selector");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // string submit_selector = 10;
  if (!this->_internal_submit_selector().empty()) {
    const std::string& _s = this->_internal_submit_selector();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Asset.Specific.submit_selector");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // string script = 11;
  if (!this->_internal_script().empty()) {
    const std::string& _s = this->_internal_script();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Asset.Specific.script");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // string http_proxy = 12;
  if (!this->_internal_http_proxy().empty()) {
    const std::string& _s = this->_internal_http_proxy();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Asset.Specific.http_proxy");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // string pg_ssl_mode = 13;
  if (!this->_internal_pg_ssl_mode().empty()) {
    const std::string& _s = this->_internal_pg_ssl_mode();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Asset.Specific.pg_ssl_mode");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.Asset.Specific)
  return target;
}

::size_t Asset_Specific::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.Asset.Specific)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string db_name = 1;
  if (!this->_internal_db_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_db_name());
  }

  // string ca_cert = 3;
  if (!this->_internal_ca_cert().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ca_cert());
  }

  // string client_cert = 4;
  if (!this->_internal_client_cert().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_client_cert());
  }

  // string client_key = 5;
  if (!this->_internal_client_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_client_key());
  }

  // string auto_fill = 7;
  if (!this->_internal_auto_fill().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_auto_fill());
  }

  // string username_selector = 8;
  if (!this->_internal_username_selector().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_username_selector());
  }

  // string password_selector = 9;
  if (!this->_internal_password_selector().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password_selector());
  }

  // string submit_selector = 10;
  if (!this->_internal_submit_selector().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_submit_selector());
  }

  // string script = 11;
  if (!this->_internal_script().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_script());
  }

  // string http_proxy = 12;
  if (!this->_internal_http_proxy().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_http_proxy());
  }

  // string pg_ssl_mode = 13;
  if (!this->_internal_pg_ssl_mode().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_pg_ssl_mode());
  }

  // bool use_ssl = 2;
  if (this->_internal_use_ssl() != 0) {
    total_size += 2;
  }

  // bool allow_invalid_cert = 6;
  if (this->_internal_allow_invalid_cert() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Asset_Specific::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Asset_Specific*>(&to_msg);
  auto& from = static_cast<const Asset_Specific&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.Asset.Specific)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_db_name().empty()) {
    _this->_internal_set_db_name(from._internal_db_name());
  }
  if (!from._internal_ca_cert().empty()) {
    _this->_internal_set_ca_cert(from._internal_ca_cert());
  }
  if (!from._internal_client_cert().empty()) {
    _this->_internal_set_client_cert(from._internal_client_cert());
  }
  if (!from._internal_client_key().empty()) {
    _this->_internal_set_client_key(from._internal_client_key());
  }
  if (!from._internal_auto_fill().empty()) {
    _this->_internal_set_auto_fill(from._internal_auto_fill());
  }
  if (!from._internal_username_selector().empty()) {
    _this->_internal_set_username_selector(from._internal_username_selector());
  }
  if (!from._internal_password_selector().empty()) {
    _this->_internal_set_password_selector(from._internal_password_selector());
  }
  if (!from._internal_submit_selector().empty()) {
    _this->_internal_set_submit_selector(from._internal_submit_selector());
  }
  if (!from._internal_script().empty()) {
    _this->_internal_set_script(from._internal_script());
  }
  if (!from._internal_http_proxy().empty()) {
    _this->_internal_set_http_proxy(from._internal_http_proxy());
  }
  if (!from._internal_pg_ssl_mode().empty()) {
    _this->_internal_set_pg_ssl_mode(from._internal_pg_ssl_mode());
  }
  if (from._internal_use_ssl() != 0) {
    _this->_impl_.use_ssl_ = from._impl_.use_ssl_;
  }
  if (from._internal_allow_invalid_cert() != 0) {
    _this->_impl_.allow_invalid_cert_ = from._impl_.allow_invalid_cert_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Asset_Specific::CopyFrom(const Asset_Specific& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.Asset.Specific)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Asset_Specific::InternalSwap(Asset_Specific* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.db_name_, &other->_impl_.db_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ca_cert_, &other->_impl_.ca_cert_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_cert_, &other->_impl_.client_cert_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_key_, &other->_impl_.client_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.auto_fill_, &other->_impl_.auto_fill_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_selector_, &other->_impl_.username_selector_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_selector_, &other->_impl_.password_selector_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.submit_selector_, &other->_impl_.submit_selector_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.script_, &other->_impl_.script_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.http_proxy_, &other->_impl_.http_proxy_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pg_ssl_mode_, &other->_impl_.pg_ssl_mode_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.allow_invalid_cert_)
      + sizeof(Asset_Specific::_impl_.allow_invalid_cert_)
      - PROTOBUF_FIELD_OFFSET(Asset_Specific, _impl_.use_ssl_)>(
          reinterpret_cast<char*>(&_impl_.use_ssl_),
          reinterpret_cast<char*>(&other->_impl_.use_ssl_));
}

::google::protobuf::Metadata Asset_Specific::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Asset::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Asset>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Asset, _impl_._has_bits_);
};

Asset::Asset(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.Asset)
}
inline PROTOBUF_NDEBUG_INLINE Asset::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::Asset& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        protocols_{visibility, arena, from.protocols_},
        id_(arena, from.id_),
        name_(arena, from.name_),
        address_(arena, from.address_),
        org_id_(arena, from.org_id_),
        org_name_(arena, from.org_name_) {}

Asset::Asset(
    ::google::protobuf::Arena* arena,
    const Asset& from)
    : ::google::protobuf::Message(arena) {
  Asset* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.specific_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::message::Asset_Specific>(
                              arena, *from._impl_.specific_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:message.Asset)
}
inline PROTOBUF_NDEBUG_INLINE Asset::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        protocols_{visibility, arena},
        id_(arena),
        name_(arena),
        address_(arena),
        org_id_(arena),
        org_name_(arena) {}

inline void Asset::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.specific_ = {};
}
Asset::~Asset() {
  // @@protoc_insertion_point(destructor:message.Asset)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Asset::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.address_.Destroy();
  _impl_.org_id_.Destroy();
  _impl_.org_name_.Destroy();
  delete _impl_.specific_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Asset::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Asset, _impl_._cached_size_),
              false,
          },
          &Asset::MergeImpl,
          &Asset::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 49, 2> Asset::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Asset, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Asset_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::Asset>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Asset, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Asset, _impl_.name_)}},
    // string address = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Asset, _impl_.address_)}},
    // string org_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Asset, _impl_.org_id_)}},
    // string org_name = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Asset, _impl_.org_name_)}},
    // repeated .message.Protocol protocols = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Asset, _impl_.protocols_)}},
    // .message.Asset.Specific specific = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 0, 1, PROTOBUF_FIELD_OFFSET(Asset, _impl_.specific_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(Asset, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(Asset, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string address = 3;
    {PROTOBUF_FIELD_OFFSET(Asset, _impl_.address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string org_id = 4;
    {PROTOBUF_FIELD_OFFSET(Asset, _impl_.org_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string org_name = 5;
    {PROTOBUF_FIELD_OFFSET(Asset, _impl_.org_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .message.Protocol protocols = 6;
    {PROTOBUF_FIELD_OFFSET(Asset, _impl_.protocols_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .message.Asset.Specific specific = 7;
    {PROTOBUF_FIELD_OFFSET(Asset, _impl_.specific_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::message::Protocol>()},
    {::_pbi::TcParser::GetTable<::message::Asset_Specific>()},
  }}, {{
    "\15\2\4\7\6\10\0\0"
    "message.Asset"
    "id"
    "name"
    "address"
    "org_id"
    "org_name"
  }},
};

PROTOBUF_NOINLINE void Asset::Clear() {
// @@protoc_insertion_point(message_clear_start:message.Asset)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.protocols_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.address_.ClearToEmpty();
  _impl_.org_id_.ClearToEmpty();
  _impl_.org_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.specific_ != nullptr);
    _impl_.specific_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Asset::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.Asset)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Asset.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Asset.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string address = 3;
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Asset.address");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string org_id = 4;
  if (!this->_internal_org_id().empty()) {
    const std::string& _s = this->_internal_org_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Asset.org_id");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string org_name = 5;
  if (!this->_internal_org_name().empty()) {
    const std::string& _s = this->_internal_org_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Asset.org_name");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // repeated .message.Protocol protocols = 6;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_protocols_size());
       i < n; i++) {
    const auto& repfield = this->_internal_protocols().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .message.Asset.Specific specific = 7;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *_impl_.specific_, _impl_.specific_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.Asset)
  return target;
}

::size_t Asset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.Asset)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .message.Protocol protocols = 6;
  total_size += 1UL * this->_internal_protocols_size();
  for (const auto& msg : this->_internal_protocols()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string address = 3;
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_address());
  }

  // string org_id = 4;
  if (!this->_internal_org_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_org_id());
  }

  // string org_name = 5;
  if (!this->_internal_org_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_org_name());
  }

  // .message.Asset.Specific specific = 7;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.specific_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Asset::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Asset*>(&to_msg);
  auto& from = static_cast<const Asset&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:message.Asset)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_protocols()->MergeFrom(
      from._internal_protocols());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (!from._internal_org_id().empty()) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  if (!from._internal_org_name().empty()) {
    _this->_internal_set_org_name(from._internal_org_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.specific_ != nullptr);
    if (_this->_impl_.specific_ == nullptr) {
      _this->_impl_.specific_ =
          ::google::protobuf::Message::CopyConstruct<::message::Asset_Specific>(arena, *from._impl_.specific_);
    } else {
      _this->_impl_.specific_->MergeFrom(*from._impl_.specific_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Asset::CopyFrom(const Asset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.Asset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Asset::InternalSwap(Asset* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.protocols_.InternalSwap(&other->_impl_.protocols_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.org_id_, &other->_impl_.org_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.org_name_, &other->_impl_.org_name_, arena);
  swap(_impl_.specific_, other->_impl_.specific_);
}

::google::protobuf::Metadata Asset::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Protocol::_Internal {
 public:
};

Protocol::Protocol(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.Protocol)
}
inline PROTOBUF_NDEBUG_INLINE Protocol::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::Protocol& from_msg)
      : name_(arena, from.name_),
        _cached_size_{0} {}

Protocol::Protocol(
    ::google::protobuf::Arena* arena,
    const Protocol& from)
    : ::google::protobuf::Message(arena) {
  Protocol* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, port_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::port_));

  // @@protoc_insertion_point(copy_constructor:message.Protocol)
}
inline PROTOBUF_NDEBUG_INLINE Protocol::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void Protocol::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, port_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::port_));
}
Protocol::~Protocol() {
  // @@protoc_insertion_point(destructor:message.Protocol)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Protocol::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Protocol::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Protocol, _impl_._cached_size_),
              false,
          },
          &Protocol::MergeImpl,
          &Protocol::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 29, 2> Protocol::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Protocol_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::Protocol>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Protocol, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Protocol, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Protocol, _impl_.name_)}},
    // int32 port = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Protocol, _impl_.port_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Protocol, _impl_.port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Protocol, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(Protocol, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 port = 3;
    {PROTOBUF_FIELD_OFFSET(Protocol, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\20\0\4\0\0\0\0\0"
    "message.Protocol"
    "name"
  }},
};

PROTOBUF_NOINLINE void Protocol::Clear() {
// @@protoc_insertion_point(message_clear_start:message.Protocol)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.port_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.port_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Protocol::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.Protocol)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Protocol.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 port = 3;
  if (this->_internal_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.Protocol)
  return target;
}

::size_t Protocol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.Protocol)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  // int32 port = 3;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Protocol::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Protocol*>(&to_msg);
  auto& from = static_cast<const Protocol&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.Protocol)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Protocol::CopyFrom(const Protocol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.Protocol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Protocol::InternalSwap(Protocol* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Protocol, _impl_.port_)
      + sizeof(Protocol::_impl_.port_)
      - PROTOBUF_FIELD_OFFSET(Protocol, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata Protocol::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Gateway::_Internal {
 public:
};

Gateway::Gateway(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.Gateway)
}
inline PROTOBUF_NDEBUG_INLINE Gateway::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::Gateway& from_msg)
      : id_(arena, from.id_),
        name_(arena, from.name_),
        ip_(arena, from.ip_),
        protocol_(arena, from.protocol_),
        username_(arena, from.username_),
        password_(arena, from.password_),
        private_key_(arena, from.private_key_),
        _cached_size_{0} {}

Gateway::Gateway(
    ::google::protobuf::Arena* arena,
    const Gateway& from)
    : ::google::protobuf::Message(arena) {
  Gateway* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.port_ = from._impl_.port_;

  // @@protoc_insertion_point(copy_constructor:message.Gateway)
}
inline PROTOBUF_NDEBUG_INLINE Gateway::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        name_(arena),
        ip_(arena),
        protocol_(arena),
        username_(arena),
        password_(arena),
        private_key_(arena),
        _cached_size_{0} {}

inline void Gateway::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.port_ = {};
}
Gateway::~Gateway() {
  // @@protoc_insertion_point(destructor:message.Gateway)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Gateway::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.ip_.Destroy();
  _impl_.protocol_.Destroy();
  _impl_.username_.Destroy();
  _impl_.password_.Destroy();
  _impl_.private_key_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Gateway::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Gateway, _impl_._cached_size_),
              false,
          },
          &Gateway::MergeImpl,
          &Gateway::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 75, 2> Gateway::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Gateway_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::Gateway>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string private_key = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Gateway, _impl_.private_key_)}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Gateway, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Gateway, _impl_.name_)}},
    // string ip = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Gateway, _impl_.ip_)}},
    // int32 port = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Gateway, _impl_.port_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Gateway, _impl_.port_)}},
    // string protocol = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Gateway, _impl_.protocol_)}},
    // string username = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Gateway, _impl_.username_)}},
    // string password = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Gateway, _impl_.password_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(Gateway, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(Gateway, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ip = 3;
    {PROTOBUF_FIELD_OFFSET(Gateway, _impl_.ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 port = 4;
    {PROTOBUF_FIELD_OFFSET(Gateway, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string protocol = 5;
    {PROTOBUF_FIELD_OFFSET(Gateway, _impl_.protocol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string username = 6;
    {PROTOBUF_FIELD_OFFSET(Gateway, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 7;
    {PROTOBUF_FIELD_OFFSET(Gateway, _impl_.password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string private_key = 8;
    {PROTOBUF_FIELD_OFFSET(Gateway, _impl_.private_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\2\4\2\0\10\10\10\13\0\0\0\0\0\0\0"
    "message.Gateway"
    "id"
    "name"
    "ip"
    "protocol"
    "username"
    "password"
    "private_key"
  }},
};

PROTOBUF_NOINLINE void Gateway::Clear() {
// @@protoc_insertion_point(message_clear_start:message.Gateway)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.ip_.ClearToEmpty();
  _impl_.protocol_.ClearToEmpty();
  _impl_.username_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _impl_.private_key_.ClearToEmpty();
  _impl_.port_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Gateway::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.Gateway)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Gateway.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Gateway.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string ip = 3;
  if (!this->_internal_ip().empty()) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Gateway.ip");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // int32 port = 4;
  if (this->_internal_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_port(), target);
  }

  // string protocol = 5;
  if (!this->_internal_protocol().empty()) {
    const std::string& _s = this->_internal_protocol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Gateway.protocol");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string username = 6;
  if (!this->_internal_username().empty()) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Gateway.username");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string password = 7;
  if (!this->_internal_password().empty()) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Gateway.password");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // string private_key = 8;
  if (!this->_internal_private_key().empty()) {
    const std::string& _s = this->_internal_private_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Gateway.private_key");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.Gateway)
  return target;
}

::size_t Gateway::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.Gateway)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string ip = 3;
  if (!this->_internal_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ip());
  }

  // string protocol = 5;
  if (!this->_internal_protocol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_protocol());
  }

  // string username = 6;
  if (!this->_internal_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_username());
  }

  // string password = 7;
  if (!this->_internal_password().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password());
  }

  // string private_key = 8;
  if (!this->_internal_private_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_private_key());
  }

  // int32 port = 4;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Gateway::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Gateway*>(&to_msg);
  auto& from = static_cast<const Gateway&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.Gateway)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (!from._internal_protocol().empty()) {
    _this->_internal_set_protocol(from._internal_protocol());
  }
  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  if (!from._internal_private_key().empty()) {
    _this->_internal_set_private_key(from._internal_private_key());
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Gateway::CopyFrom(const Gateway& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.Gateway)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Gateway::InternalSwap(Gateway* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.protocol_, &other->_impl_.protocol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.private_key_, &other->_impl_.private_key_, arena);
        swap(_impl_.port_, other->_impl_.port_);
}

::google::protobuf::Metadata Gateway::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Permission::_Internal {
 public:
};

Permission::Permission(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.Permission)
}
Permission::Permission(
    ::google::protobuf::Arena* arena, const Permission& from)
    : Permission(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Permission::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Permission::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, enable_connect_),
           0,
           offsetof(Impl_, enable_paste_) -
               offsetof(Impl_, enable_connect_) +
               sizeof(Impl_::enable_paste_));
}
Permission::~Permission() {
  // @@protoc_insertion_point(destructor:message.Permission)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Permission::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Permission::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Permission, _impl_._cached_size_),
              false,
          },
          &Permission::MergeImpl,
          &Permission::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> Permission::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Permission_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::Permission>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool enable_connect = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Permission, _impl_.enable_connect_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Permission, _impl_.enable_connect_)}},
    // bool enable_download = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Permission, _impl_.enable_download_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Permission, _impl_.enable_download_)}},
    // bool enable_upload = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Permission, _impl_.enable_upload_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Permission, _impl_.enable_upload_)}},
    // bool enable_copy = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Permission, _impl_.enable_copy_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Permission, _impl_.enable_copy_)}},
    // bool enable_paste = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Permission, _impl_.enable_paste_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Permission, _impl_.enable_paste_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool enable_connect = 1;
    {PROTOBUF_FIELD_OFFSET(Permission, _impl_.enable_connect_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool enable_download = 2;
    {PROTOBUF_FIELD_OFFSET(Permission, _impl_.enable_download_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool enable_upload = 3;
    {PROTOBUF_FIELD_OFFSET(Permission, _impl_.enable_upload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool enable_copy = 4;
    {PROTOBUF_FIELD_OFFSET(Permission, _impl_.enable_copy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool enable_paste = 5;
    {PROTOBUF_FIELD_OFFSET(Permission, _impl_.enable_paste_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Permission::Clear() {
// @@protoc_insertion_point(message_clear_start:message.Permission)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.enable_connect_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.enable_paste_) -
      reinterpret_cast<char*>(&_impl_.enable_connect_)) + sizeof(_impl_.enable_paste_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Permission::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.Permission)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool enable_connect = 1;
  if (this->_internal_enable_connect() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_enable_connect(), target);
  }

  // bool enable_download = 2;
  if (this->_internal_enable_download() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_enable_download(), target);
  }

  // bool enable_upload = 3;
  if (this->_internal_enable_upload() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_enable_upload(), target);
  }

  // bool enable_copy = 4;
  if (this->_internal_enable_copy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_enable_copy(), target);
  }

  // bool enable_paste = 5;
  if (this->_internal_enable_paste() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_enable_paste(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.Permission)
  return target;
}

::size_t Permission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.Permission)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bool enable_connect = 1;
  if (this->_internal_enable_connect() != 0) {
    total_size += 2;
  }

  // bool enable_download = 2;
  if (this->_internal_enable_download() != 0) {
    total_size += 2;
  }

  // bool enable_upload = 3;
  if (this->_internal_enable_upload() != 0) {
    total_size += 2;
  }

  // bool enable_copy = 4;
  if (this->_internal_enable_copy() != 0) {
    total_size += 2;
  }

  // bool enable_paste = 5;
  if (this->_internal_enable_paste() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Permission::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Permission*>(&to_msg);
  auto& from = static_cast<const Permission&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.Permission)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_enable_connect() != 0) {
    _this->_impl_.enable_connect_ = from._impl_.enable_connect_;
  }
  if (from._internal_enable_download() != 0) {
    _this->_impl_.enable_download_ = from._impl_.enable_download_;
  }
  if (from._internal_enable_upload() != 0) {
    _this->_impl_.enable_upload_ = from._impl_.enable_upload_;
  }
  if (from._internal_enable_copy() != 0) {
    _this->_impl_.enable_copy_ = from._impl_.enable_copy_;
  }
  if (from._internal_enable_paste() != 0) {
    _this->_impl_.enable_paste_ = from._impl_.enable_paste_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Permission::CopyFrom(const Permission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.Permission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Permission::InternalSwap(Permission* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Permission, _impl_.enable_paste_)
      + sizeof(Permission::_impl_.enable_paste_)
      - PROTOBUF_FIELD_OFFSET(Permission, _impl_.enable_connect_)>(
          reinterpret_cast<char*>(&_impl_.enable_connect_),
          reinterpret_cast<char*>(&other->_impl_.enable_connect_));
}

::google::protobuf::Metadata Permission::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CommandACL::_Internal {
 public:
};

CommandACL::CommandACL(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.CommandACL)
}
inline PROTOBUF_NDEBUG_INLINE CommandACL::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::CommandACL& from_msg)
      : command_groups_{visibility, arena, from.command_groups_},
        id_(arena, from.id_),
        name_(arena, from.name_),
        _cached_size_{0} {}

CommandACL::CommandACL(
    ::google::protobuf::Arena* arena,
    const CommandACL& from)
    : ::google::protobuf::Message(arena) {
  CommandACL* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, priority_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, priority_),
           offsetof(Impl_, is_active_) -
               offsetof(Impl_, priority_) +
               sizeof(Impl_::is_active_));

  // @@protoc_insertion_point(copy_constructor:message.CommandACL)
}
inline PROTOBUF_NDEBUG_INLINE CommandACL::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : command_groups_{visibility, arena},
        id_(arena),
        name_(arena),
        _cached_size_{0} {}

inline void CommandACL::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, priority_),
           0,
           offsetof(Impl_, is_active_) -
               offsetof(Impl_, priority_) +
               sizeof(Impl_::is_active_));
}
CommandACL::~CommandACL() {
  // @@protoc_insertion_point(destructor:message.CommandACL)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CommandACL::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CommandACL::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CommandACL, _impl_._cached_size_),
              false,
          },
          &CommandACL::MergeImpl,
          &CommandACL::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 33, 2> CommandACL::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967176,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CommandACL_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::CommandACL>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CommandACL, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CommandACL, _impl_.name_)}},
    // int32 priority = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CommandACL, _impl_.priority_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CommandACL, _impl_.priority_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .message.CommandACL.Action action = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CommandACL, _impl_.action_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(CommandACL, _impl_.action_)}},
    // bool is_active = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CommandACL, _impl_.is_active_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(CommandACL, _impl_.is_active_)}},
    // repeated .message.CommandGroup command_groups = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(CommandACL, _impl_.command_groups_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(CommandACL, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(CommandACL, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 priority = 3;
    {PROTOBUF_FIELD_OFFSET(CommandACL, _impl_.priority_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .message.CommandACL.Action action = 5;
    {PROTOBUF_FIELD_OFFSET(CommandACL, _impl_.action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool is_active = 6;
    {PROTOBUF_FIELD_OFFSET(CommandACL, _impl_.is_active_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // repeated .message.CommandGroup command_groups = 7;
    {PROTOBUF_FIELD_OFFSET(CommandACL, _impl_.command_groups_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::message::CommandGroup>()},
  }}, {{
    "\22\2\4\0\0\0\0\0"
    "message.CommandACL"
    "id"
    "name"
  }},
};

PROTOBUF_NOINLINE void CommandACL::Clear() {
// @@protoc_insertion_point(message_clear_start:message.CommandACL)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.command_groups_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.priority_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_active_) -
      reinterpret_cast<char*>(&_impl_.priority_)) + sizeof(_impl_.is_active_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CommandACL::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.CommandACL)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.CommandACL.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.CommandACL.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 priority = 3;
  if (this->_internal_priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_priority(), target);
  }

  // .message.CommandACL.Action action = 5;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_action(), target);
  }

  // bool is_active = 6;
  if (this->_internal_is_active() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_is_active(), target);
  }

  // repeated .message.CommandGroup command_groups = 7;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_command_groups_size());
       i < n; i++) {
    const auto& repfield = this->_internal_command_groups().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            7, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.CommandACL)
  return target;
}

::size_t CommandACL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.CommandACL)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .message.CommandGroup command_groups = 7;
  total_size += 1UL * this->_internal_command_groups_size();
  for (const auto& msg : this->_internal_command_groups()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // int32 priority = 3;
  if (this->_internal_priority() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_priority());
  }

  // .message.CommandACL.Action action = 5;
  if (this->_internal_action() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  // bool is_active = 6;
  if (this->_internal_is_active() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CommandACL::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CommandACL*>(&to_msg);
  auto& from = static_cast<const CommandACL&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.CommandACL)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_command_groups()->MergeFrom(
      from._internal_command_groups());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_priority() != 0) {
    _this->_impl_.priority_ = from._impl_.priority_;
  }
  if (from._internal_action() != 0) {
    _this->_impl_.action_ = from._impl_.action_;
  }
  if (from._internal_is_active() != 0) {
    _this->_impl_.is_active_ = from._impl_.is_active_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommandACL::CopyFrom(const CommandACL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.CommandACL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CommandACL::InternalSwap(CommandACL* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.command_groups_.InternalSwap(&other->_impl_.command_groups_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommandACL, _impl_.is_active_)
      + sizeof(CommandACL::_impl_.is_active_)
      - PROTOBUF_FIELD_OFFSET(CommandACL, _impl_.priority_)>(
          reinterpret_cast<char*>(&_impl_.priority_),
          reinterpret_cast<char*>(&other->_impl_.priority_));
}

::google::protobuf::Metadata CommandACL::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CommandGroup::_Internal {
 public:
};

CommandGroup::CommandGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.CommandGroup)
}
inline PROTOBUF_NDEBUG_INLINE CommandGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::CommandGroup& from_msg)
      : id_(arena, from.id_),
        name_(arena, from.name_),
        content_(arena, from.content_),
        type_(arena, from.type_),
        pattern_(arena, from.pattern_),
        _cached_size_{0} {}

CommandGroup::CommandGroup(
    ::google::protobuf::Arena* arena,
    const CommandGroup& from)
    : ::google::protobuf::Message(arena) {
  CommandGroup* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.ignore_case_ = from._impl_.ignore_case_;

  // @@protoc_insertion_point(copy_constructor:message.CommandGroup)
}
inline PROTOBUF_NDEBUG_INLINE CommandGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        name_(arena),
        content_(arena),
        type_(arena),
        pattern_(arena),
        _cached_size_{0} {}

inline void CommandGroup::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ignore_case_ = {};
}
CommandGroup::~CommandGroup() {
  // @@protoc_insertion_point(destructor:message.CommandGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CommandGroup::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.content_.Destroy();
  _impl_.type_.Destroy();
  _impl_.pattern_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CommandGroup::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CommandGroup, _impl_._cached_size_),
              false,
          },
          &CommandGroup::MergeImpl,
          &CommandGroup::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 53, 2> CommandGroup::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CommandGroup_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::CommandGroup>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CommandGroup, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CommandGroup, _impl_.name_)}},
    // string content = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CommandGroup, _impl_.content_)}},
    // string Type = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(CommandGroup, _impl_.type_)}},
    // string pattern = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CommandGroup, _impl_.pattern_)}},
    // bool ignore_case = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CommandGroup, _impl_.ignore_case_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(CommandGroup, _impl_.ignore_case_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(CommandGroup, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(CommandGroup, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string content = 3;
    {PROTOBUF_FIELD_OFFSET(CommandGroup, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string Type = 4;
    {PROTOBUF_FIELD_OFFSET(CommandGroup, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string pattern = 5;
    {PROTOBUF_FIELD_OFFSET(CommandGroup, _impl_.pattern_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool ignore_case = 6;
    {PROTOBUF_FIELD_OFFSET(CommandGroup, _impl_.ignore_case_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\24\2\4\7\4\7\0\0"
    "message.CommandGroup"
    "id"
    "name"
    "content"
    "Type"
    "pattern"
  }},
};

PROTOBUF_NOINLINE void CommandGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:message.CommandGroup)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _impl_.pattern_.ClearToEmpty();
  _impl_.ignore_case_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CommandGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.CommandGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.CommandGroup.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.CommandGroup.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string content = 3;
  if (!this->_internal_content().empty()) {
    const std::string& _s = this->_internal_content();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.CommandGroup.content");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string Type = 4;
  if (!this->_internal_type().empty()) {
    const std::string& _s = this->_internal_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.CommandGroup.Type");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string pattern = 5;
  if (!this->_internal_pattern().empty()) {
    const std::string& _s = this->_internal_pattern();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.CommandGroup.pattern");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // bool ignore_case = 6;
  if (this->_internal_ignore_case() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_ignore_case(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.CommandGroup)
  return target;
}

::size_t CommandGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.CommandGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string content = 3;
  if (!this->_internal_content().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_content());
  }

  // string Type = 4;
  if (!this->_internal_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type());
  }

  // string pattern = 5;
  if (!this->_internal_pattern().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_pattern());
  }

  // bool ignore_case = 6;
  if (this->_internal_ignore_case() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CommandGroup::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CommandGroup*>(&to_msg);
  auto& from = static_cast<const CommandGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.CommandGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_pattern().empty()) {
    _this->_internal_set_pattern(from._internal_pattern());
  }
  if (from._internal_ignore_case() != 0) {
    _this->_impl_.ignore_case_ = from._impl_.ignore_case_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommandGroup::CopyFrom(const CommandGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.CommandGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CommandGroup::InternalSwap(CommandGroup* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pattern_, &other->_impl_.pattern_, arena);
        swap(_impl_.ignore_case_, other->_impl_.ignore_case_);
}

::google::protobuf::Metadata CommandGroup::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExpireInfo::_Internal {
 public:
};

ExpireInfo::ExpireInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.ExpireInfo)
}
ExpireInfo::ExpireInfo(
    ::google::protobuf::Arena* arena, const ExpireInfo& from)
    : ExpireInfo(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ExpireInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ExpireInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.expire_at_ = {};
}
ExpireInfo::~ExpireInfo() {
  // @@protoc_insertion_point(destructor:message.ExpireInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ExpireInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ExpireInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ExpireInfo, _impl_._cached_size_),
              false,
          },
          &ExpireInfo::MergeImpl,
          &ExpireInfo::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ExpireInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ExpireInfo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::ExpireInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 expire_at = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ExpireInfo, _impl_.expire_at_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ExpireInfo, _impl_.expire_at_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 expire_at = 1;
    {PROTOBUF_FIELD_OFFSET(ExpireInfo, _impl_.expire_at_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ExpireInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:message.ExpireInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.expire_at_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ExpireInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.ExpireInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 expire_at = 1;
  if (this->_internal_expire_at() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_expire_at(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.ExpireInfo)
  return target;
}

::size_t ExpireInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.ExpireInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 expire_at = 1;
  if (this->_internal_expire_at() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_expire_at());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ExpireInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExpireInfo*>(&to_msg);
  auto& from = static_cast<const ExpireInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.ExpireInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_expire_at() != 0) {
    _this->_impl_.expire_at_ = from._impl_.expire_at_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExpireInfo::CopyFrom(const ExpireInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.ExpireInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExpireInfo::InternalSwap(ExpireInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.expire_at_, other->_impl_.expire_at_);
}

::google::protobuf::Metadata ExpireInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Session::_Internal {
 public:
};

Session::Session(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.Session)
}
inline PROTOBUF_NDEBUG_INLINE Session::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::Session& from_msg)
      : id_(arena, from.id_),
        user_(arena, from.user_),
        asset_(arena, from.asset_),
        account_(arena, from.account_),
        remote_addr_(arena, from.remote_addr_),
        protocol_(arena, from.protocol_),
        org_id_(arena, from.org_id_),
        user_id_(arena, from.user_id_),
        asset_id_(arena, from.asset_id_),
        account_id_(arena, from.account_id_),
        token_id_(arena, from.token_id_),
        _cached_size_{0} {}

Session::Session(
    ::google::protobuf::Arena* arena,
    const Session& from)
    : ::google::protobuf::Message(arena) {
  Session* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, date_start_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, date_start_),
           offsetof(Impl_, login_from_) -
               offsetof(Impl_, date_start_) +
               sizeof(Impl_::login_from_));

  // @@protoc_insertion_point(copy_constructor:message.Session)
}
inline PROTOBUF_NDEBUG_INLINE Session::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        user_(arena),
        asset_(arena),
        account_(arena),
        remote_addr_(arena),
        protocol_(arena),
        org_id_(arena),
        user_id_(arena),
        asset_id_(arena),
        account_id_(arena),
        token_id_(arena),
        _cached_size_{0} {}

inline void Session::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, date_start_),
           0,
           offsetof(Impl_, login_from_) -
               offsetof(Impl_, date_start_) +
               sizeof(Impl_::login_from_));
}
Session::~Session() {
  // @@protoc_insertion_point(destructor:message.Session)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Session::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.user_.Destroy();
  _impl_.asset_.Destroy();
  _impl_.account_.Destroy();
  _impl_.remote_addr_.Destroy();
  _impl_.protocol_.Destroy();
  _impl_.org_id_.Destroy();
  _impl_.user_id_.Destroy();
  _impl_.asset_id_.Destroy();
  _impl_.account_id_.Destroy();
  _impl_.token_id_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Session::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Session, _impl_._cached_size_),
              false,
          },
          &Session::MergeImpl,
          &Session::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 0, 108, 2> Session::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Session_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::Session>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Session, _impl_.id_)}},
    // string user = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Session, _impl_.user_)}},
    // string asset = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Session, _impl_.asset_)}},
    // string account = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Session, _impl_.account_)}},
    // .message.Session.LoginFrom login_from = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Session, _impl_.login_from_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Session, _impl_.login_from_)}},
    // string remote_addr = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Session, _impl_.remote_addr_)}},
    // string protocol = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Session, _impl_.protocol_)}},
    // int64 date_start = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Session, _impl_.date_start_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Session, _impl_.date_start_)}},
    // string org_id = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Session, _impl_.org_id_)}},
    // string user_id = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(Session, _impl_.user_id_)}},
    // string asset_id = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(Session, _impl_.asset_id_)}},
    // string account_id = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(Session, _impl_.account_id_)}},
    // string token_id = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(Session, _impl_.token_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(Session, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user = 2;
    {PROTOBUF_FIELD_OFFSET(Session, _impl_.user_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string asset = 3;
    {PROTOBUF_FIELD_OFFSET(Session, _impl_.asset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string account = 4;
    {PROTOBUF_FIELD_OFFSET(Session, _impl_.account_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .message.Session.LoginFrom login_from = 5;
    {PROTOBUF_FIELD_OFFSET(Session, _impl_.login_from_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string remote_addr = 6;
    {PROTOBUF_FIELD_OFFSET(Session, _impl_.remote_addr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string protocol = 7;
    {PROTOBUF_FIELD_OFFSET(Session, _impl_.protocol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 date_start = 8;
    {PROTOBUF_FIELD_OFFSET(Session, _impl_.date_start_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string org_id = 9;
    {PROTOBUF_FIELD_OFFSET(Session, _impl_.org_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user_id = 10;
    {PROTOBUF_FIELD_OFFSET(Session, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string asset_id = 11;
    {PROTOBUF_FIELD_OFFSET(Session, _impl_.asset_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string account_id = 12;
    {PROTOBUF_FIELD_OFFSET(Session, _impl_.account_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string token_id = 13;
    {PROTOBUF_FIELD_OFFSET(Session, _impl_.token_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\2\4\5\7\0\13\10\0\6\7\10\12\10\0\0"
    "message.Session"
    "id"
    "user"
    "asset"
    "account"
    "remote_addr"
    "protocol"
    "org_id"
    "user_id"
    "asset_id"
    "account_id"
    "token_id"
  }},
};

PROTOBUF_NOINLINE void Session::Clear() {
// @@protoc_insertion_point(message_clear_start:message.Session)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.user_.ClearToEmpty();
  _impl_.asset_.ClearToEmpty();
  _impl_.account_.ClearToEmpty();
  _impl_.remote_addr_.ClearToEmpty();
  _impl_.protocol_.ClearToEmpty();
  _impl_.org_id_.ClearToEmpty();
  _impl_.user_id_.ClearToEmpty();
  _impl_.asset_id_.ClearToEmpty();
  _impl_.account_id_.ClearToEmpty();
  _impl_.token_id_.ClearToEmpty();
  ::memset(&_impl_.date_start_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.login_from_) -
      reinterpret_cast<char*>(&_impl_.date_start_)) + sizeof(_impl_.login_from_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Session::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.Session)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Session.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string user = 2;
  if (!this->_internal_user().empty()) {
    const std::string& _s = this->_internal_user();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Session.user");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string asset = 3;
  if (!this->_internal_asset().empty()) {
    const std::string& _s = this->_internal_asset();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Session.asset");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string account = 4;
  if (!this->_internal_account().empty()) {
    const std::string& _s = this->_internal_account();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Session.account");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // .message.Session.LoginFrom login_from = 5;
  if (this->_internal_login_from() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_login_from(), target);
  }

  // string remote_addr = 6;
  if (!this->_internal_remote_addr().empty()) {
    const std::string& _s = this->_internal_remote_addr();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Session.remote_addr");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string protocol = 7;
  if (!this->_internal_protocol().empty()) {
    const std::string& _s = this->_internal_protocol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Session.protocol");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // int64 date_start = 8;
  if (this->_internal_date_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<8>(
            stream, this->_internal_date_start(), target);
  }

  // string org_id = 9;
  if (!this->_internal_org_id().empty()) {
    const std::string& _s = this->_internal_org_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Session.org_id");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // string user_id = 10;
  if (!this->_internal_user_id().empty()) {
    const std::string& _s = this->_internal_user_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Session.user_id");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // string asset_id = 11;
  if (!this->_internal_asset_id().empty()) {
    const std::string& _s = this->_internal_asset_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Session.asset_id");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // string account_id = 12;
  if (!this->_internal_account_id().empty()) {
    const std::string& _s = this->_internal_account_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Session.account_id");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // string token_id = 13;
  if (!this->_internal_token_id().empty()) {
    const std::string& _s = this->_internal_token_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Session.token_id");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.Session)
  return target;
}

::size_t Session::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.Session)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string user = 2;
  if (!this->_internal_user().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user());
  }

  // string asset = 3;
  if (!this->_internal_asset().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_asset());
  }

  // string account = 4;
  if (!this->_internal_account().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account());
  }

  // string remote_addr = 6;
  if (!this->_internal_remote_addr().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_remote_addr());
  }

  // string protocol = 7;
  if (!this->_internal_protocol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_protocol());
  }

  // string org_id = 9;
  if (!this->_internal_org_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_org_id());
  }

  // string user_id = 10;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user_id());
  }

  // string asset_id = 11;
  if (!this->_internal_asset_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_asset_id());
  }

  // string account_id = 12;
  if (!this->_internal_account_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_account_id());
  }

  // string token_id = 13;
  if (!this->_internal_token_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_token_id());
  }

  // int64 date_start = 8;
  if (this->_internal_date_start() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_date_start());
  }

  // .message.Session.LoginFrom login_from = 5;
  if (this->_internal_login_from() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_login_from());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Session::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Session*>(&to_msg);
  auto& from = static_cast<const Session&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.Session)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_user().empty()) {
    _this->_internal_set_user(from._internal_user());
  }
  if (!from._internal_asset().empty()) {
    _this->_internal_set_asset(from._internal_asset());
  }
  if (!from._internal_account().empty()) {
    _this->_internal_set_account(from._internal_account());
  }
  if (!from._internal_remote_addr().empty()) {
    _this->_internal_set_remote_addr(from._internal_remote_addr());
  }
  if (!from._internal_protocol().empty()) {
    _this->_internal_set_protocol(from._internal_protocol());
  }
  if (!from._internal_org_id().empty()) {
    _this->_internal_set_org_id(from._internal_org_id());
  }
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_asset_id().empty()) {
    _this->_internal_set_asset_id(from._internal_asset_id());
  }
  if (!from._internal_account_id().empty()) {
    _this->_internal_set_account_id(from._internal_account_id());
  }
  if (!from._internal_token_id().empty()) {
    _this->_internal_set_token_id(from._internal_token_id());
  }
  if (from._internal_date_start() != 0) {
    _this->_impl_.date_start_ = from._impl_.date_start_;
  }
  if (from._internal_login_from() != 0) {
    _this->_impl_.login_from_ = from._impl_.login_from_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Session::CopyFrom(const Session& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.Session)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Session::InternalSwap(Session* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_, &other->_impl_.user_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.asset_, &other->_impl_.asset_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_, &other->_impl_.account_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remote_addr_, &other->_impl_.remote_addr_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.protocol_, &other->_impl_.protocol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.org_id_, &other->_impl_.org_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.asset_id_, &other->_impl_.asset_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_id_, &other->_impl_.token_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Session, _impl_.login_from_)
      + sizeof(Session::_impl_.login_from_)
      - PROTOBUF_FIELD_OFFSET(Session, _impl_.date_start_)>(
          reinterpret_cast<char*>(&_impl_.date_start_),
          reinterpret_cast<char*>(&other->_impl_.date_start_));
}

::google::protobuf::Metadata Session::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TokenStatus::_Internal {
 public:
};

TokenStatus::TokenStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.TokenStatus)
}
inline PROTOBUF_NDEBUG_INLINE TokenStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::TokenStatus& from_msg)
      : code_(arena, from.code_),
        detail_(arena, from.detail_),
        _cached_size_{0} {}

TokenStatus::TokenStatus(
    ::google::protobuf::Arena* arena,
    const TokenStatus& from)
    : ::google::protobuf::Message(arena) {
  TokenStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.is_expired_ = from._impl_.is_expired_;

  // @@protoc_insertion_point(copy_constructor:message.TokenStatus)
}
inline PROTOBUF_NDEBUG_INLINE TokenStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : code_(arena),
        detail_(arena),
        _cached_size_{0} {}

inline void TokenStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_expired_ = {};
}
TokenStatus::~TokenStatus() {
  // @@protoc_insertion_point(destructor:message.TokenStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TokenStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.code_.Destroy();
  _impl_.detail_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
TokenStatus::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(TokenStatus, _impl_._cached_size_),
              false,
          },
          &TokenStatus::MergeImpl,
          &TokenStatus::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 38, 2> TokenStatus::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TokenStatus_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::TokenStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string code = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TokenStatus, _impl_.code_)}},
    // string detail = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TokenStatus, _impl_.detail_)}},
    // bool is_expired = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TokenStatus, _impl_.is_expired_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TokenStatus, _impl_.is_expired_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string code = 1;
    {PROTOBUF_FIELD_OFFSET(TokenStatus, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string detail = 2;
    {PROTOBUF_FIELD_OFFSET(TokenStatus, _impl_.detail_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool is_expired = 3;
    {PROTOBUF_FIELD_OFFSET(TokenStatus, _impl_.is_expired_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\23\4\6\0\0\0\0\0"
    "message.TokenStatus"
    "code"
    "detail"
  }},
};

PROTOBUF_NOINLINE void TokenStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:message.TokenStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.code_.ClearToEmpty();
  _impl_.detail_.ClearToEmpty();
  _impl_.is_expired_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* TokenStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.TokenStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string code = 1;
  if (!this->_internal_code().empty()) {
    const std::string& _s = this->_internal_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.TokenStatus.code");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string detail = 2;
  if (!this->_internal_detail().empty()) {
    const std::string& _s = this->_internal_detail();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.TokenStatus.detail");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // bool is_expired = 3;
  if (this->_internal_is_expired() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_is_expired(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.TokenStatus)
  return target;
}

::size_t TokenStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.TokenStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string code = 1;
  if (!this->_internal_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_code());
  }

  // string detail = 2;
  if (!this->_internal_detail().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_detail());
  }

  // bool is_expired = 3;
  if (this->_internal_is_expired() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void TokenStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TokenStatus*>(&to_msg);
  auto& from = static_cast<const TokenStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.TokenStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  if (!from._internal_detail().empty()) {
    _this->_internal_set_detail(from._internal_detail());
  }
  if (from._internal_is_expired() != 0) {
    _this->_impl_.is_expired_ = from._impl_.is_expired_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TokenStatus::CopyFrom(const TokenStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.TokenStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TokenStatus::InternalSwap(TokenStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, &other->_impl_.code_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.detail_, &other->_impl_.detail_, arena);
        swap(_impl_.is_expired_, other->_impl_.is_expired_);
}

::google::protobuf::Metadata TokenStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TerminalTask::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TerminalTask>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TerminalTask, _impl_._has_bits_);
};

TerminalTask::TerminalTask(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.TerminalTask)
}
inline PROTOBUF_NDEBUG_INLINE TerminalTask::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::TerminalTask& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        session_id_(arena, from.session_id_),
        terminated_by_(arena, from.terminated_by_),
        created_by_(arena, from.created_by_) {}

TerminalTask::TerminalTask(
    ::google::protobuf::Arena* arena,
    const TerminalTask& from)
    : ::google::protobuf::Message(arena) {
  TerminalTask* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.token_status_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::message::TokenStatus>(
                              arena, *from._impl_.token_status_)
                        : nullptr;
  _impl_.action_ = from._impl_.action_;

  // @@protoc_insertion_point(copy_constructor:message.TerminalTask)
}
inline PROTOBUF_NDEBUG_INLINE TerminalTask::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        id_(arena),
        session_id_(arena),
        terminated_by_(arena),
        created_by_(arena) {}

inline void TerminalTask::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, token_status_),
           0,
           offsetof(Impl_, action_) -
               offsetof(Impl_, token_status_) +
               sizeof(Impl_::action_));
}
TerminalTask::~TerminalTask() {
  // @@protoc_insertion_point(destructor:message.TerminalTask)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TerminalTask::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.session_id_.Destroy();
  _impl_.terminated_by_.Destroy();
  _impl_.created_by_.Destroy();
  delete _impl_.token_status_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
TerminalTask::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(TerminalTask, _impl_._cached_size_),
              false,
          },
          &TerminalTask::MergeImpl,
          &TerminalTask::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 64, 2> TerminalTask::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TerminalTask, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TerminalTask_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::TerminalTask>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TerminalTask, _impl_.id_)}},
    // .message.TaskAction action = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TerminalTask, _impl_.action_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TerminalTask, _impl_.action_)}},
    // string session_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TerminalTask, _impl_.session_id_)}},
    // string terminated_by = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TerminalTask, _impl_.terminated_by_)}},
    // string created_by = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(TerminalTask, _impl_.created_by_)}},
    // .message.TokenStatus token_status = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(TerminalTask, _impl_.token_status_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(TerminalTask, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .message.TaskAction action = 2;
    {PROTOBUF_FIELD_OFFSET(TerminalTask, _impl_.action_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string session_id = 3;
    {PROTOBUF_FIELD_OFFSET(TerminalTask, _impl_.session_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string terminated_by = 4;
    {PROTOBUF_FIELD_OFFSET(TerminalTask, _impl_.terminated_by_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string created_by = 5;
    {PROTOBUF_FIELD_OFFSET(TerminalTask, _impl_.created_by_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .message.TokenStatus token_status = 6;
    {PROTOBUF_FIELD_OFFSET(TerminalTask, _impl_.token_status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::message::TokenStatus>()},
  }}, {{
    "\24\2\0\12\15\12\0\0"
    "message.TerminalTask"
    "id"
    "session_id"
    "terminated_by"
    "created_by"
  }},
};

PROTOBUF_NOINLINE void TerminalTask::Clear() {
// @@protoc_insertion_point(message_clear_start:message.TerminalTask)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.session_id_.ClearToEmpty();
  _impl_.terminated_by_.ClearToEmpty();
  _impl_.created_by_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.token_status_ != nullptr);
    _impl_.token_status_->Clear();
  }
  _impl_.action_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* TerminalTask::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.TerminalTask)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.TerminalTask.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .message.TaskAction action = 2;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_action(), target);
  }

  // string session_id = 3;
  if (!this->_internal_session_id().empty()) {
    const std::string& _s = this->_internal_session_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.TerminalTask.session_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string terminated_by = 4;
  if (!this->_internal_terminated_by().empty()) {
    const std::string& _s = this->_internal_terminated_by();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.TerminalTask.terminated_by");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string created_by = 5;
  if (!this->_internal_created_by().empty()) {
    const std::string& _s = this->_internal_created_by();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.TerminalTask.created_by");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .message.TokenStatus token_status = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.token_status_, _impl_.token_status_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.TerminalTask)
  return target;
}

::size_t TerminalTask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.TerminalTask)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string session_id = 3;
  if (!this->_internal_session_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_session_id());
  }

  // string terminated_by = 4;
  if (!this->_internal_terminated_by().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_terminated_by());
  }

  // string created_by = 5;
  if (!this->_internal_created_by().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_created_by());
  }

  // .message.TokenStatus token_status = 6;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.token_status_);
  }

  // .message.TaskAction action = 2;
  if (this->_internal_action() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void TerminalTask::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TerminalTask*>(&to_msg);
  auto& from = static_cast<const TerminalTask&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:message.TerminalTask)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  if (!from._internal_terminated_by().empty()) {
    _this->_internal_set_terminated_by(from._internal_terminated_by());
  }
  if (!from._internal_created_by().empty()) {
    _this->_internal_set_created_by(from._internal_created_by());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.token_status_ != nullptr);
    if (_this->_impl_.token_status_ == nullptr) {
      _this->_impl_.token_status_ =
          ::google::protobuf::Message::CopyConstruct<::message::TokenStatus>(arena, *from._impl_.token_status_);
    } else {
      _this->_impl_.token_status_->MergeFrom(*from._impl_.token_status_);
    }
  }
  if (from._internal_action() != 0) {
    _this->_impl_.action_ = from._impl_.action_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TerminalTask::CopyFrom(const TerminalTask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.TerminalTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TerminalTask::InternalSwap(TerminalTask* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.terminated_by_, &other->_impl_.terminated_by_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.created_by_, &other->_impl_.created_by_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TerminalTask, _impl_.action_)
      + sizeof(TerminalTask::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(TerminalTask, _impl_.token_status_)>(
          reinterpret_cast<char*>(&_impl_.token_status_),
          reinterpret_cast<char*>(&other->_impl_.token_status_));
}

::google::protobuf::Metadata TerminalTask::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TokenAuthInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TokenAuthInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_._has_bits_);
};

TokenAuthInfo::TokenAuthInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.TokenAuthInfo)
}
inline PROTOBUF_NDEBUG_INLINE TokenAuthInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::TokenAuthInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        filter_rules_{visibility, arena, from.filter_rules_},
        gateways_{visibility, arena, from.gateways_},
        key_id_(arena, from.key_id_),
        secrete_id_(arena, from.secrete_id_),
        facemonitortoken_(arena, from.facemonitortoken_) {}

TokenAuthInfo::TokenAuthInfo(
    ::google::protobuf::Arena* arena,
    const TokenAuthInfo& from)
    : ::google::protobuf::Message(arena) {
  TokenAuthInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.asset_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::message::Asset>(
                              arena, *from._impl_.asset_)
                        : nullptr;
  _impl_.user_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::message::User>(
                              arena, *from._impl_.user_)
                        : nullptr;
  _impl_.account_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::message::Account>(
                              arena, *from._impl_.account_)
                        : nullptr;
  _impl_.permission_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::message::Permission>(
                              arena, *from._impl_.permission_)
                        : nullptr;
  _impl_.expire_info_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::message::ExpireInfo>(
                              arena, *from._impl_.expire_info_)
                        : nullptr;
  _impl_.setting_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::message::ComponentSetting>(
                              arena, *from._impl_.setting_)
                        : nullptr;
  _impl_.platform_ = (cached_has_bits & 0x00000040u) ? ::google::protobuf::Message::CopyConstruct<::message::Platform>(
                              arena, *from._impl_.platform_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:message.TokenAuthInfo)
}
inline PROTOBUF_NDEBUG_INLINE TokenAuthInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        filter_rules_{visibility, arena},
        gateways_{visibility, arena},
        key_id_(arena),
        secrete_id_(arena),
        facemonitortoken_(arena) {}

inline void TokenAuthInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, asset_),
           0,
           offsetof(Impl_, platform_) -
               offsetof(Impl_, asset_) +
               sizeof(Impl_::platform_));
}
TokenAuthInfo::~TokenAuthInfo() {
  // @@protoc_insertion_point(destructor:message.TokenAuthInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TokenAuthInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.key_id_.Destroy();
  _impl_.secrete_id_.Destroy();
  _impl_.facemonitortoken_.Destroy();
  delete _impl_.asset_;
  delete _impl_.user_;
  delete _impl_.account_;
  delete _impl_.permission_;
  delete _impl_.expire_info_;
  delete _impl_.setting_;
  delete _impl_.platform_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
TokenAuthInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_._cached_size_),
              false,
          },
          &TokenAuthInfo::MergeImpl,
          &TokenAuthInfo::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 9, 70, 2> TokenAuthInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    9,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TokenAuthInfo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::TokenAuthInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string key_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.key_id_)}},
    // string secrete_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.secrete_id_)}},
    // .message.Asset asset = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.asset_)}},
    // .message.User user = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.user_)}},
    // .message.Account account = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.account_)}},
    // .message.Permission permission = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 3, PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.permission_)}},
    // .message.ExpireInfo expire_info = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 4, 4, PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.expire_info_)}},
    // repeated .message.CommandACL filter_rules = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 5, PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.filter_rules_)}},
    // repeated .message.Gateway gateways = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 6, PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.gateways_)}},
    // .message.ComponentSetting setting = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 5, 7, PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.setting_)}},
    // .message.Platform platform = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 6, 8, PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.platform_)}},
    // string FaceMonitorToken = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.facemonitortoken_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string key_id = 1;
    {PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.key_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string secrete_id = 2;
    {PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.secrete_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .message.Asset asset = 3;
    {PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.asset_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .message.User user = 4;
    {PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.user_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .message.Account account = 5;
    {PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.account_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .message.Permission permission = 6;
    {PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.permission_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .message.ExpireInfo expire_info = 7;
    {PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.expire_info_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .message.CommandACL filter_rules = 8;
    {PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.filter_rules_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .message.Gateway gateways = 9;
    {PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.gateways_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .message.ComponentSetting setting = 10;
    {PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.setting_), _Internal::kHasBitsOffset + 5, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .message.Platform platform = 11;
    {PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.platform_), _Internal::kHasBitsOffset + 6, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string FaceMonitorToken = 12;
    {PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.facemonitortoken_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::message::Asset>()},
    {::_pbi::TcParser::GetTable<::message::User>()},
    {::_pbi::TcParser::GetTable<::message::Account>()},
    {::_pbi::TcParser::GetTable<::message::Permission>()},
    {::_pbi::TcParser::GetTable<::message::ExpireInfo>()},
    {::_pbi::TcParser::GetTable<::message::CommandACL>()},
    {::_pbi::TcParser::GetTable<::message::Gateway>()},
    {::_pbi::TcParser::GetTable<::message::ComponentSetting>()},
    {::_pbi::TcParser::GetTable<::message::Platform>()},
  }}, {{
    "\25\6\12\0\0\0\0\0\0\0\0\0\20\0\0\0"
    "message.TokenAuthInfo"
    "key_id"
    "secrete_id"
    "FaceMonitorToken"
  }},
};

PROTOBUF_NOINLINE void TokenAuthInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:message.TokenAuthInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.filter_rules_.Clear();
  _impl_.gateways_.Clear();
  _impl_.key_id_.ClearToEmpty();
  _impl_.secrete_id_.ClearToEmpty();
  _impl_.facemonitortoken_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.asset_ != nullptr);
      _impl_.asset_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.user_ != nullptr);
      _impl_.user_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.account_ != nullptr);
      _impl_.account_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.permission_ != nullptr);
      _impl_.permission_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.expire_info_ != nullptr);
      _impl_.expire_info_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.setting_ != nullptr);
      _impl_.setting_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.platform_ != nullptr);
      _impl_.platform_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* TokenAuthInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.TokenAuthInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string key_id = 1;
  if (!this->_internal_key_id().empty()) {
    const std::string& _s = this->_internal_key_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.TokenAuthInfo.key_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string secrete_id = 2;
  if (!this->_internal_secrete_id().empty()) {
    const std::string& _s = this->_internal_secrete_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.TokenAuthInfo.secrete_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .message.Asset asset = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.asset_, _impl_.asset_->GetCachedSize(), target, stream);
  }

  // .message.User user = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.user_, _impl_.user_->GetCachedSize(), target, stream);
  }

  // .message.Account account = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.account_, _impl_.account_->GetCachedSize(), target, stream);
  }

  // .message.Permission permission = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.permission_, _impl_.permission_->GetCachedSize(), target, stream);
  }

  // .message.ExpireInfo expire_info = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *_impl_.expire_info_, _impl_.expire_info_->GetCachedSize(), target, stream);
  }

  // repeated .message.CommandACL filter_rules = 8;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_filter_rules_size());
       i < n; i++) {
    const auto& repfield = this->_internal_filter_rules().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            8, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .message.Gateway gateways = 9;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_gateways_size());
       i < n; i++) {
    const auto& repfield = this->_internal_gateways().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            9, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .message.ComponentSetting setting = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, *_impl_.setting_, _impl_.setting_->GetCachedSize(), target, stream);
  }

  // .message.Platform platform = 11;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, *_impl_.platform_, _impl_.platform_->GetCachedSize(), target, stream);
  }

  // string FaceMonitorToken = 12;
  if (!this->_internal_facemonitortoken().empty()) {
    const std::string& _s = this->_internal_facemonitortoken();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.TokenAuthInfo.FaceMonitorToken");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.TokenAuthInfo)
  return target;
}

::size_t TokenAuthInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.TokenAuthInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .message.CommandACL filter_rules = 8;
  total_size += 1UL * this->_internal_filter_rules_size();
  for (const auto& msg : this->_internal_filter_rules()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .message.Gateway gateways = 9;
  total_size += 1UL * this->_internal_gateways_size();
  for (const auto& msg : this->_internal_gateways()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string key_id = 1;
  if (!this->_internal_key_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_key_id());
  }

  // string secrete_id = 2;
  if (!this->_internal_secrete_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_secrete_id());
  }

  // string FaceMonitorToken = 12;
  if (!this->_internal_facemonitortoken().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_facemonitortoken());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // .message.Asset asset = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.asset_);
    }

    // .message.User user = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.user_);
    }

    // .message.Account account = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.account_);
    }

    // .message.Permission permission = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.permission_);
    }

    // .message.ExpireInfo expire_info = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.expire_info_);
    }

    // .message.ComponentSetting setting = 10;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.setting_);
    }

    // .message.Platform platform = 11;
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.platform_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void TokenAuthInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TokenAuthInfo*>(&to_msg);
  auto& from = static_cast<const TokenAuthInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:message.TokenAuthInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_filter_rules()->MergeFrom(
      from._internal_filter_rules());
  _this->_internal_mutable_gateways()->MergeFrom(
      from._internal_gateways());
  if (!from._internal_key_id().empty()) {
    _this->_internal_set_key_id(from._internal_key_id());
  }
  if (!from._internal_secrete_id().empty()) {
    _this->_internal_set_secrete_id(from._internal_secrete_id());
  }
  if (!from._internal_facemonitortoken().empty()) {
    _this->_internal_set_facemonitortoken(from._internal_facemonitortoken());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.asset_ != nullptr);
      if (_this->_impl_.asset_ == nullptr) {
        _this->_impl_.asset_ =
            ::google::protobuf::Message::CopyConstruct<::message::Asset>(arena, *from._impl_.asset_);
      } else {
        _this->_impl_.asset_->MergeFrom(*from._impl_.asset_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.user_ != nullptr);
      if (_this->_impl_.user_ == nullptr) {
        _this->_impl_.user_ =
            ::google::protobuf::Message::CopyConstruct<::message::User>(arena, *from._impl_.user_);
      } else {
        _this->_impl_.user_->MergeFrom(*from._impl_.user_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.account_ != nullptr);
      if (_this->_impl_.account_ == nullptr) {
        _this->_impl_.account_ =
            ::google::protobuf::Message::CopyConstruct<::message::Account>(arena, *from._impl_.account_);
      } else {
        _this->_impl_.account_->MergeFrom(*from._impl_.account_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.permission_ != nullptr);
      if (_this->_impl_.permission_ == nullptr) {
        _this->_impl_.permission_ =
            ::google::protobuf::Message::CopyConstruct<::message::Permission>(arena, *from._impl_.permission_);
      } else {
        _this->_impl_.permission_->MergeFrom(*from._impl_.permission_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.expire_info_ != nullptr);
      if (_this->_impl_.expire_info_ == nullptr) {
        _this->_impl_.expire_info_ =
            ::google::protobuf::Message::CopyConstruct<::message::ExpireInfo>(arena, *from._impl_.expire_info_);
      } else {
        _this->_impl_.expire_info_->MergeFrom(*from._impl_.expire_info_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.setting_ != nullptr);
      if (_this->_impl_.setting_ == nullptr) {
        _this->_impl_.setting_ =
            ::google::protobuf::Message::CopyConstruct<::message::ComponentSetting>(arena, *from._impl_.setting_);
      } else {
        _this->_impl_.setting_->MergeFrom(*from._impl_.setting_);
      }
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(from._impl_.platform_ != nullptr);
      if (_this->_impl_.platform_ == nullptr) {
        _this->_impl_.platform_ =
            ::google::protobuf::Message::CopyConstruct<::message::Platform>(arena, *from._impl_.platform_);
      } else {
        _this->_impl_.platform_->MergeFrom(*from._impl_.platform_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TokenAuthInfo::CopyFrom(const TokenAuthInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.TokenAuthInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TokenAuthInfo::InternalSwap(TokenAuthInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.filter_rules_.InternalSwap(&other->_impl_.filter_rules_);
  _impl_.gateways_.InternalSwap(&other->_impl_.gateways_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_id_, &other->_impl_.key_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.secrete_id_, &other->_impl_.secrete_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.facemonitortoken_, &other->_impl_.facemonitortoken_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.platform_)
      + sizeof(TokenAuthInfo::_impl_.platform_)
      - PROTOBUF_FIELD_OFFSET(TokenAuthInfo, _impl_.asset_)>(
          reinterpret_cast<char*>(&_impl_.asset_),
          reinterpret_cast<char*>(&other->_impl_.asset_));
}

::google::protobuf::Metadata TokenAuthInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Platform::_Internal {
 public:
};

Platform::Platform(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.Platform)
}
inline PROTOBUF_NDEBUG_INLINE Platform::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::Platform& from_msg)
      : protocols_{visibility, arena, from.protocols_},
        name_(arena, from.name_),
        category_(arena, from.category_),
        charset_(arena, from.charset_),
        type_(arena, from.type_),
        _cached_size_{0} {}

Platform::Platform(
    ::google::protobuf::Arena* arena,
    const Platform& from)
    : ::google::protobuf::Message(arena) {
  Platform* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:message.Platform)
}
inline PROTOBUF_NDEBUG_INLINE Platform::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : protocols_{visibility, arena},
        name_(arena),
        category_(arena),
        charset_(arena),
        type_(arena),
        _cached_size_{0} {}

inline void Platform::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
Platform::~Platform() {
  // @@protoc_insertion_point(destructor:message.Platform)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Platform::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.category_.Destroy();
  _impl_.charset_.Destroy();
  _impl_.type_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Platform::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Platform, _impl_._cached_size_),
              false,
          },
          &Platform::MergeImpl,
          &Platform::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 48, 2> Platform::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Platform_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::Platform>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Platform, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Platform, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Platform, _impl_.name_)}},
    // string category = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Platform, _impl_.category_)}},
    // string charset = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Platform, _impl_.charset_)}},
    // string type = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Platform, _impl_.type_)}},
    // repeated .message.PlatformProtocol protocols = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Platform, _impl_.protocols_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Platform, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(Platform, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string category = 3;
    {PROTOBUF_FIELD_OFFSET(Platform, _impl_.category_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string charset = 4;
    {PROTOBUF_FIELD_OFFSET(Platform, _impl_.charset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 5;
    {PROTOBUF_FIELD_OFFSET(Platform, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .message.PlatformProtocol protocols = 6;
    {PROTOBUF_FIELD_OFFSET(Platform, _impl_.protocols_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::message::PlatformProtocol>()},
  }}, {{
    "\20\0\4\10\7\4\0\0"
    "message.Platform"
    "name"
    "category"
    "charset"
    "type"
  }},
};

PROTOBUF_NOINLINE void Platform::Clear() {
// @@protoc_insertion_point(message_clear_start:message.Platform)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.protocols_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.category_.ClearToEmpty();
  _impl_.charset_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _impl_.id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Platform::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.Platform)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Platform.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string category = 3;
  if (!this->_internal_category().empty()) {
    const std::string& _s = this->_internal_category();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Platform.category");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string charset = 4;
  if (!this->_internal_charset().empty()) {
    const std::string& _s = this->_internal_charset();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Platform.charset");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string type = 5;
  if (!this->_internal_type().empty()) {
    const std::string& _s = this->_internal_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Platform.type");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // repeated .message.PlatformProtocol protocols = 6;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_protocols_size());
       i < n; i++) {
    const auto& repfield = this->_internal_protocols().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.Platform)
  return target;
}

::size_t Platform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.Platform)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .message.PlatformProtocol protocols = 6;
  total_size += 1UL * this->_internal_protocols_size();
  for (const auto& msg : this->_internal_protocols()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string category = 3;
  if (!this->_internal_category().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_category());
  }

  // string charset = 4;
  if (!this->_internal_charset().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_charset());
  }

  // string type = 5;
  if (!this->_internal_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type());
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Platform::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Platform*>(&to_msg);
  auto& from = static_cast<const Platform&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.Platform)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_protocols()->MergeFrom(
      from._internal_protocols());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_charset().empty()) {
    _this->_internal_set_charset(from._internal_charset());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Platform::CopyFrom(const Platform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.Platform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Platform::InternalSwap(Platform* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.protocols_.InternalSwap(&other->_impl_.protocols_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.charset_, &other->_impl_.charset_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata Platform::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

PlatformProtocol_SettingsEntry_DoNotUse::PlatformProtocol_SettingsEntry_DoNotUse() {}
PlatformProtocol_SettingsEntry_DoNotUse::PlatformProtocol_SettingsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
const ::google::protobuf::MessageLite::ClassData*
PlatformProtocol_SettingsEntry_DoNotUse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // tc_table
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PlatformProtocol_SettingsEntry_DoNotUse, _cached_size_),
              false,
          },
          &PlatformProtocol_SettingsEntry_DoNotUse::MergeImpl,
          &PlatformProtocol_SettingsEntry_DoNotUse::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
// ===================================================================

class PlatformProtocol::_Internal {
 public:
};

PlatformProtocol::PlatformProtocol(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.PlatformProtocol)
}
inline PROTOBUF_NDEBUG_INLINE PlatformProtocol::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::PlatformProtocol& from_msg)
      : settings_{visibility, arena, from.settings_},
        name_(arena, from.name_),
        _cached_size_{0} {}

PlatformProtocol::PlatformProtocol(
    ::google::protobuf::Arena* arena,
    const PlatformProtocol& from)
    : ::google::protobuf::Message(arena) {
  PlatformProtocol* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, port_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::port_));

  // @@protoc_insertion_point(copy_constructor:message.PlatformProtocol)
}
inline PROTOBUF_NDEBUG_INLINE PlatformProtocol::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : settings_{visibility, arena},
        name_(arena),
        _cached_size_{0} {}

inline void PlatformProtocol::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, port_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::port_));
}
PlatformProtocol::~PlatformProtocol() {
  // @@protoc_insertion_point(destructor:message.PlatformProtocol)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PlatformProtocol::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PlatformProtocol::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PlatformProtocol, _impl_._cached_size_),
              false,
          },
          &PlatformProtocol::MergeImpl,
          &PlatformProtocol::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 45, 2> PlatformProtocol::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PlatformProtocol_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::PlatformProtocol>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlatformProtocol, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PlatformProtocol, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PlatformProtocol, _impl_.name_)}},
    // int32 port = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlatformProtocol, _impl_.port_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PlatformProtocol, _impl_.port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1;
    {PROTOBUF_FIELD_OFFSET(PlatformProtocol, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(PlatformProtocol, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 port = 3;
    {PROTOBUF_FIELD_OFFSET(PlatformProtocol, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // map<string, string> settings = 4;
    {PROTOBUF_FIELD_OFFSET(PlatformProtocol, _impl_.settings_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(PlatformProtocol()._impl_.settings_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\30\0\4\0\10\0\0\0"
    "message.PlatformProtocol"
    "name"
    "settings"
  }},
};

PROTOBUF_NOINLINE void PlatformProtocol::Clear() {
// @@protoc_insertion_point(message_clear_start:message.PlatformProtocol)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.settings_.Clear();
  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.port_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.port_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PlatformProtocol::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.PlatformProtocol)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.PlatformProtocol.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 port = 3;
  if (this->_internal_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_port(), target);
  }

  // map<string, string> settings = 4;
  if (!_internal_settings().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_settings();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.PlatformProtocol.settings");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.PlatformProtocol.settings");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.PlatformProtocol.settings");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.PlatformProtocol.settings");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.PlatformProtocol)
  return target;
}

::size_t PlatformProtocol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.PlatformProtocol)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // map<string, string> settings = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_settings_size());
  for (const auto& entry : _internal_settings()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  // int32 port = 3;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PlatformProtocol::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlatformProtocol*>(&to_msg);
  auto& from = static_cast<const PlatformProtocol&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.PlatformProtocol)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.settings_.MergeFrom(from._impl_.settings_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlatformProtocol::CopyFrom(const PlatformProtocol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.PlatformProtocol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlatformProtocol::InternalSwap(PlatformProtocol* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.settings_.InternalSwap(&other->_impl_.settings_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlatformProtocol, _impl_.port_)
      + sizeof(PlatformProtocol::_impl_.port_)
      - PROTOBUF_FIELD_OFFSET(PlatformProtocol, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata PlatformProtocol::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ComponentSetting::_Internal {
 public:
};

ComponentSetting::ComponentSetting(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.ComponentSetting)
}
ComponentSetting::ComponentSetting(
    ::google::protobuf::Arena* arena, const ComponentSetting& from)
    : ComponentSetting(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ComponentSetting::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ComponentSetting::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_idle_time_),
           0,
           offsetof(Impl_, max_session_time_) -
               offsetof(Impl_, max_idle_time_) +
               sizeof(Impl_::max_session_time_));
}
ComponentSetting::~ComponentSetting() {
  // @@protoc_insertion_point(destructor:message.ComponentSetting)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ComponentSetting::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ComponentSetting::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ComponentSetting, _impl_._cached_size_),
              false,
          },
          &ComponentSetting::MergeImpl,
          &ComponentSetting::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ComponentSetting::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ComponentSetting_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::ComponentSetting>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 max_session_time = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ComponentSetting, _impl_.max_session_time_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ComponentSetting, _impl_.max_session_time_)}},
    // int32 max_idle_time = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ComponentSetting, _impl_.max_idle_time_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ComponentSetting, _impl_.max_idle_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 max_idle_time = 1;
    {PROTOBUF_FIELD_OFFSET(ComponentSetting, _impl_.max_idle_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 max_session_time = 2;
    {PROTOBUF_FIELD_OFFSET(ComponentSetting, _impl_.max_session_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ComponentSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:message.ComponentSetting)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.max_idle_time_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.max_session_time_) -
      reinterpret_cast<char*>(&_impl_.max_idle_time_)) + sizeof(_impl_.max_session_time_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ComponentSetting::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.ComponentSetting)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 max_idle_time = 1;
  if (this->_internal_max_idle_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_max_idle_time(), target);
  }

  // int32 max_session_time = 2;
  if (this->_internal_max_session_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_max_session_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.ComponentSetting)
  return target;
}

::size_t ComponentSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.ComponentSetting)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // int32 max_idle_time = 1;
  if (this->_internal_max_idle_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_max_idle_time());
  }

  // int32 max_session_time = 2;
  if (this->_internal_max_session_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_max_session_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ComponentSetting::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ComponentSetting*>(&to_msg);
  auto& from = static_cast<const ComponentSetting&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.ComponentSetting)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_max_idle_time() != 0) {
    _this->_impl_.max_idle_time_ = from._impl_.max_idle_time_;
  }
  if (from._internal_max_session_time() != 0) {
    _this->_impl_.max_session_time_ = from._impl_.max_session_time_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ComponentSetting::CopyFrom(const ComponentSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.ComponentSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ComponentSetting::InternalSwap(ComponentSetting* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComponentSetting, _impl_.max_session_time_)
      + sizeof(ComponentSetting::_impl_.max_session_time_)
      - PROTOBUF_FIELD_OFFSET(ComponentSetting, _impl_.max_idle_time_)>(
          reinterpret_cast<char*>(&_impl_.max_idle_time_),
          reinterpret_cast<char*>(&other->_impl_.max_idle_time_));
}

::google::protobuf::Metadata ComponentSetting::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Forward::_Internal {
 public:
};

Forward::Forward(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.Forward)
}
inline PROTOBUF_NDEBUG_INLINE Forward::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::Forward& from_msg)
      : id_(arena, from.id_),
        host_(arena, from.host_),
        _cached_size_{0} {}

Forward::Forward(
    ::google::protobuf::Arena* arena,
    const Forward& from)
    : ::google::protobuf::Message(arena) {
  Forward* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.port_ = from._impl_.port_;

  // @@protoc_insertion_point(copy_constructor:message.Forward)
}
inline PROTOBUF_NDEBUG_INLINE Forward::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        host_(arena),
        _cached_size_{0} {}

inline void Forward::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.port_ = {};
}
Forward::~Forward() {
  // @@protoc_insertion_point(destructor:message.Forward)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Forward::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.host_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Forward::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Forward, _impl_._cached_size_),
              false,
          },
          &Forward::MergeImpl,
          &Forward::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 30, 2> Forward::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Forward_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::Forward>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Forward, _impl_.id_)}},
    // string Host = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Forward, _impl_.host_)}},
    // int32 port = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Forward, _impl_.port_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Forward, _impl_.port_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(Forward, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string Host = 2;
    {PROTOBUF_FIELD_OFFSET(Forward, _impl_.host_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 port = 3;
    {PROTOBUF_FIELD_OFFSET(Forward, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\17\2\4\0\0\0\0\0"
    "message.Forward"
    "id"
    "Host"
  }},
};

PROTOBUF_NOINLINE void Forward::Clear() {
// @@protoc_insertion_point(message_clear_start:message.Forward)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.host_.ClearToEmpty();
  _impl_.port_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Forward::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.Forward)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Forward.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string Host = 2;
  if (!this->_internal_host().empty()) {
    const std::string& _s = this->_internal_host();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Forward.Host");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int32 port = 3;
  if (this->_internal_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.Forward)
  return target;
}

::size_t Forward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.Forward)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string Host = 2;
  if (!this->_internal_host().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_host());
  }

  // int32 port = 3;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Forward::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Forward*>(&to_msg);
  auto& from = static_cast<const Forward&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.Forward)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_host().empty()) {
    _this->_internal_set_host(from._internal_host());
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Forward::CopyFrom(const Forward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.Forward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Forward::InternalSwap(Forward* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.host_, &other->_impl_.host_, arena);
        swap(_impl_.port_, other->_impl_.port_);
}

::google::protobuf::Metadata Forward::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PublicSetting::_Internal {
 public:
};

PublicSetting::PublicSetting(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.PublicSetting)
}
inline PROTOBUF_NDEBUG_INLINE PublicSetting::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::PublicSetting& from_msg)
      : gpt_base_url_(arena, from.gpt_base_url_),
        gpt_api_key_(arena, from.gpt_api_key_),
        gpt_proxy_(arena, from.gpt_proxy_),
        gpt_model_(arena, from.gpt_model_),
        license_content_(arena, from.license_content_),
        _cached_size_{0} {}

PublicSetting::PublicSetting(
    ::google::protobuf::Arena* arena,
    const PublicSetting& from)
    : ::google::protobuf::Message(arena) {
  PublicSetting* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, xpack_enabled_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, xpack_enabled_),
           offsetof(Impl_, valid_license_) -
               offsetof(Impl_, xpack_enabled_) +
               sizeof(Impl_::valid_license_));

  // @@protoc_insertion_point(copy_constructor:message.PublicSetting)
}
inline PROTOBUF_NDEBUG_INLINE PublicSetting::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : gpt_base_url_(arena),
        gpt_api_key_(arena),
        gpt_proxy_(arena),
        gpt_model_(arena),
        license_content_(arena),
        _cached_size_{0} {}

inline void PublicSetting::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, xpack_enabled_),
           0,
           offsetof(Impl_, valid_license_) -
               offsetof(Impl_, xpack_enabled_) +
               sizeof(Impl_::valid_license_));
}
PublicSetting::~PublicSetting() {
  // @@protoc_insertion_point(destructor:message.PublicSetting)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PublicSetting::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.gpt_base_url_.Destroy();
  _impl_.gpt_api_key_.Destroy();
  _impl_.gpt_proxy_.Destroy();
  _impl_.gpt_model_.Destroy();
  _impl_.license_content_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PublicSetting::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PublicSetting, _impl_._cached_size_),
              false,
          },
          &PublicSetting::MergeImpl,
          &PublicSetting::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 86, 2> PublicSetting::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PublicSetting_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::PublicSetting>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool xpack_enabled = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PublicSetting, _impl_.xpack_enabled_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PublicSetting, _impl_.xpack_enabled_)}},
    // bool valid_license = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PublicSetting, _impl_.valid_license_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PublicSetting, _impl_.valid_license_)}},
    // string gpt_base_url = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PublicSetting, _impl_.gpt_base_url_)}},
    // string gpt_api_key = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PublicSetting, _impl_.gpt_api_key_)}},
    // string gpt_proxy = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PublicSetting, _impl_.gpt_proxy_)}},
    // string gpt_model = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(PublicSetting, _impl_.gpt_model_)}},
    // string license_content = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(PublicSetting, _impl_.license_content_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool xpack_enabled = 1;
    {PROTOBUF_FIELD_OFFSET(PublicSetting, _impl_.xpack_enabled_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool valid_license = 2;
    {PROTOBUF_FIELD_OFFSET(PublicSetting, _impl_.valid_license_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string gpt_base_url = 3;
    {PROTOBUF_FIELD_OFFSET(PublicSetting, _impl_.gpt_base_url_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string gpt_api_key = 4;
    {PROTOBUF_FIELD_OFFSET(PublicSetting, _impl_.gpt_api_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string gpt_proxy = 5;
    {PROTOBUF_FIELD_OFFSET(PublicSetting, _impl_.gpt_proxy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string gpt_model = 6;
    {PROTOBUF_FIELD_OFFSET(PublicSetting, _impl_.gpt_model_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string license_content = 7;
    {PROTOBUF_FIELD_OFFSET(PublicSetting, _impl_.license_content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\0\0\14\13\11\11\17"
    "message.PublicSetting"
    "gpt_base_url"
    "gpt_api_key"
    "gpt_proxy"
    "gpt_model"
    "license_content"
  }},
};

PROTOBUF_NOINLINE void PublicSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:message.PublicSetting)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.gpt_base_url_.ClearToEmpty();
  _impl_.gpt_api_key_.ClearToEmpty();
  _impl_.gpt_proxy_.ClearToEmpty();
  _impl_.gpt_model_.ClearToEmpty();
  _impl_.license_content_.ClearToEmpty();
  ::memset(&_impl_.xpack_enabled_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.valid_license_) -
      reinterpret_cast<char*>(&_impl_.xpack_enabled_)) + sizeof(_impl_.valid_license_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PublicSetting::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.PublicSetting)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool xpack_enabled = 1;
  if (this->_internal_xpack_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_xpack_enabled(), target);
  }

  // bool valid_license = 2;
  if (this->_internal_valid_license() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_valid_license(), target);
  }

  // string gpt_base_url = 3;
  if (!this->_internal_gpt_base_url().empty()) {
    const std::string& _s = this->_internal_gpt_base_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.PublicSetting.gpt_base_url");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string gpt_api_key = 4;
  if (!this->_internal_gpt_api_key().empty()) {
    const std::string& _s = this->_internal_gpt_api_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.PublicSetting.gpt_api_key");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string gpt_proxy = 5;
  if (!this->_internal_gpt_proxy().empty()) {
    const std::string& _s = this->_internal_gpt_proxy();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.PublicSetting.gpt_proxy");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string gpt_model = 6;
  if (!this->_internal_gpt_model().empty()) {
    const std::string& _s = this->_internal_gpt_model();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.PublicSetting.gpt_model");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string license_content = 7;
  if (!this->_internal_license_content().empty()) {
    const std::string& _s = this->_internal_license_content();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.PublicSetting.license_content");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.PublicSetting)
  return target;
}

::size_t PublicSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.PublicSetting)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string gpt_base_url = 3;
  if (!this->_internal_gpt_base_url().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_gpt_base_url());
  }

  // string gpt_api_key = 4;
  if (!this->_internal_gpt_api_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_gpt_api_key());
  }

  // string gpt_proxy = 5;
  if (!this->_internal_gpt_proxy().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_gpt_proxy());
  }

  // string gpt_model = 6;
  if (!this->_internal_gpt_model().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_gpt_model());
  }

  // string license_content = 7;
  if (!this->_internal_license_content().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_license_content());
  }

  // bool xpack_enabled = 1;
  if (this->_internal_xpack_enabled() != 0) {
    total_size += 2;
  }

  // bool valid_license = 2;
  if (this->_internal_valid_license() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PublicSetting::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PublicSetting*>(&to_msg);
  auto& from = static_cast<const PublicSetting&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.PublicSetting)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_gpt_base_url().empty()) {
    _this->_internal_set_gpt_base_url(from._internal_gpt_base_url());
  }
  if (!from._internal_gpt_api_key().empty()) {
    _this->_internal_set_gpt_api_key(from._internal_gpt_api_key());
  }
  if (!from._internal_gpt_proxy().empty()) {
    _this->_internal_set_gpt_proxy(from._internal_gpt_proxy());
  }
  if (!from._internal_gpt_model().empty()) {
    _this->_internal_set_gpt_model(from._internal_gpt_model());
  }
  if (!from._internal_license_content().empty()) {
    _this->_internal_set_license_content(from._internal_license_content());
  }
  if (from._internal_xpack_enabled() != 0) {
    _this->_impl_.xpack_enabled_ = from._impl_.xpack_enabled_;
  }
  if (from._internal_valid_license() != 0) {
    _this->_impl_.valid_license_ = from._impl_.valid_license_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PublicSetting::CopyFrom(const PublicSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.PublicSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PublicSetting::InternalSwap(PublicSetting* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gpt_base_url_, &other->_impl_.gpt_base_url_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gpt_api_key_, &other->_impl_.gpt_api_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gpt_proxy_, &other->_impl_.gpt_proxy_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gpt_model_, &other->_impl_.gpt_model_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.license_content_, &other->_impl_.license_content_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PublicSetting, _impl_.valid_license_)
      + sizeof(PublicSetting::_impl_.valid_license_)
      - PROTOBUF_FIELD_OFFSET(PublicSetting, _impl_.xpack_enabled_)>(
          reinterpret_cast<char*>(&_impl_.xpack_enabled_),
          reinterpret_cast<char*>(&other->_impl_.xpack_enabled_));
}

::google::protobuf::Metadata PublicSetting::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Cookie::_Internal {
 public:
};

Cookie::Cookie(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.Cookie)
}
inline PROTOBUF_NDEBUG_INLINE Cookie::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::Cookie& from_msg)
      : name_(arena, from.name_),
        value_(arena, from.value_),
        _cached_size_{0} {}

Cookie::Cookie(
    ::google::protobuf::Arena* arena,
    const Cookie& from)
    : ::google::protobuf::Message(arena) {
  Cookie* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:message.Cookie)
}
inline PROTOBUF_NDEBUG_INLINE Cookie::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        value_(arena),
        _cached_size_{0} {}

inline void Cookie::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Cookie::~Cookie() {
  // @@protoc_insertion_point(destructor:message.Cookie)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Cookie::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.value_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Cookie::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Cookie, _impl_._cached_size_),
              false,
          },
          &Cookie::MergeImpl,
          &Cookie::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 32, 2> Cookie::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Cookie_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::Cookie>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Cookie, _impl_.value_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Cookie, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Cookie, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(Cookie, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\16\4\5\0\0\0\0\0"
    "message.Cookie"
    "name"
    "value"
  }},
};

PROTOBUF_NOINLINE void Cookie::Clear() {
// @@protoc_insertion_point(message_clear_start:message.Cookie)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Cookie::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.Cookie)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Cookie.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string value = 2;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.Cookie.value");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.Cookie)
  return target;
}

::size_t Cookie::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.Cookie)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string value = 2;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Cookie::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Cookie*>(&to_msg);
  auto& from = static_cast<const Cookie&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.Cookie)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Cookie::CopyFrom(const Cookie& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.Cookie)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Cookie::InternalSwap(Cookie* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

::google::protobuf::Metadata Cookie::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LifecycleLogData::_Internal {
 public:
};

LifecycleLogData::LifecycleLogData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:message.LifecycleLogData)
}
inline PROTOBUF_NDEBUG_INLINE LifecycleLogData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::message::LifecycleLogData& from_msg)
      : reason_(arena, from.reason_),
        user_(arena, from.user_),
        _cached_size_{0} {}

LifecycleLogData::LifecycleLogData(
    ::google::protobuf::Arena* arena,
    const LifecycleLogData& from)
    : ::google::protobuf::Message(arena) {
  LifecycleLogData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.event_ = from._impl_.event_;

  // @@protoc_insertion_point(copy_constructor:message.LifecycleLogData)
}
inline PROTOBUF_NDEBUG_INLINE LifecycleLogData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : reason_(arena),
        user_(arena),
        _cached_size_{0} {}

inline void LifecycleLogData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.event_ = {};
}
LifecycleLogData::~LifecycleLogData() {
  // @@protoc_insertion_point(destructor:message.LifecycleLogData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LifecycleLogData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.reason_.Destroy();
  _impl_.user_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
LifecycleLogData::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(LifecycleLogData, _impl_._cached_size_),
              false,
          },
          &LifecycleLogData::MergeImpl,
          &LifecycleLogData::kDescriptorMethods,
          &descriptor_table_common_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 43, 2> LifecycleLogData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LifecycleLogData_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::message::LifecycleLogData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .message.LifecycleLogData.event_type event = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LifecycleLogData, _impl_.event_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LifecycleLogData, _impl_.event_)}},
    // string reason = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LifecycleLogData, _impl_.reason_)}},
    // string user = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(LifecycleLogData, _impl_.user_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .message.LifecycleLogData.event_type event = 1;
    {PROTOBUF_FIELD_OFFSET(LifecycleLogData, _impl_.event_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string reason = 2;
    {PROTOBUF_FIELD_OFFSET(LifecycleLogData, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user = 3;
    {PROTOBUF_FIELD_OFFSET(LifecycleLogData, _impl_.user_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\0\6\4\0\0\0\0"
    "message.LifecycleLogData"
    "reason"
    "user"
  }},
};

PROTOBUF_NOINLINE void LifecycleLogData::Clear() {
// @@protoc_insertion_point(message_clear_start:message.LifecycleLogData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.reason_.ClearToEmpty();
  _impl_.user_.ClearToEmpty();
  _impl_.event_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* LifecycleLogData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.LifecycleLogData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .message.LifecycleLogData.event_type event = 1;
  if (this->_internal_event() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_event(), target);
  }

  // string reason = 2;
  if (!this->_internal_reason().empty()) {
    const std::string& _s = this->_internal_reason();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.LifecycleLogData.reason");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string user = 3;
  if (!this->_internal_user().empty()) {
    const std::string& _s = this->_internal_user();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "message.LifecycleLogData.user");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.LifecycleLogData)
  return target;
}

::size_t LifecycleLogData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.LifecycleLogData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string reason = 2;
  if (!this->_internal_reason().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_reason());
  }

  // string user = 3;
  if (!this->_internal_user().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user());
  }

  // .message.LifecycleLogData.event_type event = 1;
  if (this->_internal_event() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_event());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void LifecycleLogData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LifecycleLogData*>(&to_msg);
  auto& from = static_cast<const LifecycleLogData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:message.LifecycleLogData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (!from._internal_user().empty()) {
    _this->_internal_set_user(from._internal_user());
  }
  if (from._internal_event() != 0) {
    _this->_impl_.event_ = from._impl_.event_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LifecycleLogData::CopyFrom(const LifecycleLogData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.LifecycleLogData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LifecycleLogData::InternalSwap(LifecycleLogData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_, &other->_impl_.user_, arena);
  swap(_impl_.event_, other->_impl_.event_);
}

::google::protobuf::Metadata LifecycleLogData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace message
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_common_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
